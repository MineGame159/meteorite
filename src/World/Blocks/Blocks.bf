using System;

namespace Meteorite {
	static class Properties {
		public static PropertyInfo SNOWY = .Bool("snowy") ~ delete _;
		public static PropertyInfo STAGE = .Int("stage", 0, 1) ~ delete _;
		public static PropertyInfo AGE_1 = .Int("age", 0, 4) ~ delete _;
		public static PropertyInfo WATERLOGGED = .Bool("waterlogged") ~ delete _;
		public static PropertyInfo HANGING = .Bool("hanging") ~ delete _;
		public static PropertyInfo LEVEL_1 = .Int("level", 0, 15) ~ delete _;
		public static PropertyInfo AXIS_1 = .Enum("axis", "x", "y", "z") ~ delete _;
		public static PropertyInfo DISTANCE_1 = .Int("distance", 1, 7) ~ delete _;
		public static PropertyInfo PERSISTENT = .Bool("persistent") ~ delete _;
		public static PropertyInfo FACING_1 = .Enum("facing", "north", "east", "south", "west", "up", "down") ~ delete _;
		public static PropertyInfo TRIGGERED = .Bool("triggered") ~ delete _;
		public static PropertyInfo INSTRUMENT = .Enum("instrument", "harp", "basedrum", "snare", "hat", "bass", "flute", "bell", "guitar", "chime", "xylophone", "iron_xylophone", "cow_bell", "didgeridoo", "bit", "banjo", "pling", "zombie", "skeleton", "creeper", "dragon", "wither_skeleton", "piglin", "custom_head") ~ delete _;
		public static PropertyInfo POWERED = .Bool("powered") ~ delete _;
		public static PropertyInfo NOTE = .Int("note", 0, 24) ~ delete _;
		public static PropertyInfo FACING_2 = .Enum("facing", "north", "south", "west", "east") ~ delete _;
		public static PropertyInfo PART = .Enum("part", "head", "foot") ~ delete _;
		public static PropertyInfo OCCUPIED = .Bool("occupied") ~ delete _;
		public static PropertyInfo SHAPE_1 = .Enum("shape", "north_south", "east_west", "ascending_east", "ascending_west", "ascending_north", "ascending_south") ~ delete _;
		public static PropertyInfo EXTENDED = .Bool("extended") ~ delete _;
		public static PropertyInfo HALF_1 = .Enum("half", "upper", "lower") ~ delete _;
		public static PropertyInfo TYPE_1 = .Enum("type", "normal", "sticky") ~ delete _;
		public static PropertyInfo SHORT = .Bool("short") ~ delete _;
		public static PropertyInfo UNSTABLE = .Bool("unstable") ~ delete _;
		public static PropertyInfo SLOT_0_OCCUPIED = .Bool("slot_0_occupied") ~ delete _;
		public static PropertyInfo SLOT_1_OCCUPIED = .Bool("slot_1_occupied") ~ delete _;
		public static PropertyInfo SLOT_2_OCCUPIED = .Bool("slot_2_occupied") ~ delete _;
		public static PropertyInfo SLOT_3_OCCUPIED = .Bool("slot_3_occupied") ~ delete _;
		public static PropertyInfo SLOT_4_OCCUPIED = .Bool("slot_4_occupied") ~ delete _;
		public static PropertyInfo SLOT_5_OCCUPIED = .Bool("slot_5_occupied") ~ delete _;
		public static PropertyInfo AGE_2 = .Int("age", 0, 15) ~ delete _;
		public static PropertyInfo NORTH_1 = .Bool("north") ~ delete _;
		public static PropertyInfo EAST_1 = .Bool("east") ~ delete _;
		public static PropertyInfo SOUTH_1 = .Bool("south") ~ delete _;
		public static PropertyInfo WEST_1 = .Bool("west") ~ delete _;
		public static PropertyInfo UP = .Bool("up") ~ delete _;
		public static PropertyInfo HALF_2 = .Enum("half", "top", "bottom") ~ delete _;
		public static PropertyInfo SHAPE_2 = .Enum("shape", "straight", "inner_left", "inner_right", "outer_left", "outer_right") ~ delete _;
		public static PropertyInfo TYPE_2 = .Enum("type", "single", "left", "right") ~ delete _;
		public static PropertyInfo NORTH_2 = .Enum("north", "up", "side", "none") ~ delete _;
		public static PropertyInfo EAST_2 = .Enum("east", "up", "side", "none") ~ delete _;
		public static PropertyInfo SOUTH_2 = .Enum("south", "up", "side", "none") ~ delete _;
		public static PropertyInfo WEST_2 = .Enum("west", "up", "side", "none") ~ delete _;
		public static PropertyInfo POWER = .Int("power", 0, 15) ~ delete _;
		public static PropertyInfo AGE_3 = .Int("age", 0, 7) ~ delete _;
		public static PropertyInfo MOISTURE = .Int("moisture", 0, 7) ~ delete _;
		public static PropertyInfo LIT = .Bool("lit") ~ delete _;
		public static PropertyInfo ROTATION = .Int("rotation", 0, 15) ~ delete _;
		public static PropertyInfo OPEN = .Bool("open") ~ delete _;
		public static PropertyInfo HINGE = .Enum("hinge", "left", "right") ~ delete _;
		public static PropertyInfo SHAPE_3 = .Enum("shape", "north_south", "east_west", "ascending_east", "ascending_west", "ascending_north", "ascending_south", "south_east", "south_west", "north_west", "north_east") ~ delete _;
		public static PropertyInfo ATTACHED = .Bool("attached") ~ delete _;
		public static PropertyInfo FACE = .Enum("face", "floor", "wall", "ceiling") ~ delete _;
		public static PropertyInfo LAYERS = .Int("layers", 1, 8) ~ delete _;
		public static PropertyInfo HAS_RECORD = .Bool("has_record") ~ delete _;
		public static PropertyInfo AXIS_2 = .Enum("axis", "x", "z") ~ delete _;
		public static PropertyInfo BITES = .Int("bites", 0, 6) ~ delete _;
		public static PropertyInfo DELAY = .Int("delay", 1, 4) ~ delete _;
		public static PropertyInfo LOCKED = .Bool("locked") ~ delete _;
		public static PropertyInfo DOWN = .Bool("down") ~ delete _;
		public static PropertyInfo IN_WALL = .Bool("in_wall") ~ delete _;
		public static PropertyInfo AGE_4 = .Int("age", 0, 3) ~ delete _;
		public static PropertyInfo HAS_BOTTLE_0 = .Bool("has_bottle_0") ~ delete _;
		public static PropertyInfo HAS_BOTTLE_1 = .Bool("has_bottle_1") ~ delete _;
		public static PropertyInfo HAS_BOTTLE_2 = .Bool("has_bottle_2") ~ delete _;
		public static PropertyInfo LEVEL_2 = .Int("level", 1, 3) ~ delete _;
		public static PropertyInfo EYE = .Bool("eye") ~ delete _;
		public static PropertyInfo AGE_5 = .Int("age", 0, 2) ~ delete _;
		public static PropertyInfo DISARMED = .Bool("disarmed") ~ delete _;
		public static PropertyInfo CONDITIONAL = .Bool("conditional") ~ delete _;
		public static PropertyInfo NORTH_3 = .Enum("north", "none", "low", "tall") ~ delete _;
		public static PropertyInfo EAST_3 = .Enum("east", "none", "low", "tall") ~ delete _;
		public static PropertyInfo WEST_3 = .Enum("west", "none", "low", "tall") ~ delete _;
		public static PropertyInfo SOUTH_3 = .Enum("south", "none", "low", "tall") ~ delete _;
		public static PropertyInfo MODE_1 = .Enum("mode", "compare", "subtract") ~ delete _;
		public static PropertyInfo INVERTED = .Bool("inverted") ~ delete _;
		public static PropertyInfo FACING_3 = .Enum("facing", "down", "north", "south", "west", "east") ~ delete _;
		public static PropertyInfo ENABLED = .Bool("enabled") ~ delete _;
		public static PropertyInfo TYPE_3 = .Enum("type", "top", "bottom", "double") ~ delete _;
		public static PropertyInfo AGE_6 = .Int("age", 0, 5) ~ delete _;
		public static PropertyInfo AGE_7 = .Int("age", 0, 25) ~ delete _;
		public static PropertyInfo HATCH = .Int("hatch", 0, 2) ~ delete _;
		public static PropertyInfo EGGS = .Int("eggs", 1, 4) ~ delete _;
		public static PropertyInfo PICKLES = .Int("pickles", 1, 4) ~ delete _;
		public static PropertyInfo AGE_8 = .Int("age", 0, 1) ~ delete _;
		public static PropertyInfo LEAVES = .Enum("leaves", "none", "small", "large") ~ delete _;
		public static PropertyInfo DRAG = .Bool("drag") ~ delete _;
		public static PropertyInfo DISTANCE_2 = .Int("distance", 0, 7) ~ delete _;
		public static PropertyInfo BOTTOM = .Bool("bottom") ~ delete _;
		public static PropertyInfo HAS_BOOK = .Bool("has_book") ~ delete _;
		public static PropertyInfo ATTACHMENT = .Enum("attachment", "floor", "ceiling", "single_wall", "double_wall") ~ delete _;
		public static PropertyInfo SIGNAL_FIRE = .Bool("signal_fire") ~ delete _;
		public static PropertyInfo MODE_2 = .Enum("mode", "save", "load", "corner", "data") ~ delete _;
		public static PropertyInfo ORIENTATION = .Enum("orientation", "down_east", "down_north", "down_south", "down_west", "up_east", "up_north", "up_south", "up_west", "west_up", "east_up", "north_up", "south_up") ~ delete _;
		public static PropertyInfo LEVEL_3 = .Int("level", 0, 8) ~ delete _;
		public static PropertyInfo HONEY_LEVEL = .Int("honey_level", 0, 5) ~ delete _;
		public static PropertyInfo CHARGES = .Int("charges", 0, 4) ~ delete _;
		public static PropertyInfo CANDLES = .Int("candles", 1, 4) ~ delete _;
		public static PropertyInfo SCULK_SENSOR_PHASE = .Enum("sculk_sensor_phase", "inactive", "active", "cooldown") ~ delete _;
		public static PropertyInfo BLOOM = .Bool("bloom") ~ delete _;
		public static PropertyInfo SHRIEKING = .Bool("shrieking") ~ delete _;
		public static PropertyInfo CAN_SUMMON = .Bool("can_summon") ~ delete _;
		public static PropertyInfo VERTICAL_DIRECTION = .Enum("vertical_direction", "up", "down") ~ delete _;
		public static PropertyInfo THICKNESS = .Enum("thickness", "tip_merge", "tip", "frustum", "middle", "base") ~ delete _;
		public static PropertyInfo BERRIES = .Bool("berries") ~ delete _;
		public static PropertyInfo TILT = .Enum("tilt", "none", "unstable", "partial", "full") ~ delete _;
	}

	static class Blocks {
		public const int MAX_ID = 23231;

		public static Block AIR;
		public static Block STONE;
		public static Block GRANITE;
		public static Block POLISHED_GRANITE;
		public static Block DIORITE;
		public static Block POLISHED_DIORITE;
		public static Block ANDESITE;
		public static Block POLISHED_ANDESITE;
		public static Block GRASS_BLOCK;
		public static Block DIRT;
		public static Block COARSE_DIRT;
		public static Block PODZOL;
		public static Block COBBLESTONE;
		public static Block OAK_PLANKS;
		public static Block SPRUCE_PLANKS;
		public static Block BIRCH_PLANKS;
		public static Block JUNGLE_PLANKS;
		public static Block ACACIA_PLANKS;
		public static Block DARK_OAK_PLANKS;
		public static Block MANGROVE_PLANKS;
		public static Block BAMBOO_PLANKS;
		public static Block BAMBOO_MOSAIC;
		public static Block OAK_SAPLING;
		public static Block SPRUCE_SAPLING;
		public static Block BIRCH_SAPLING;
		public static Block JUNGLE_SAPLING;
		public static Block ACACIA_SAPLING;
		public static Block DARK_OAK_SAPLING;
		public static Block MANGROVE_PROPAGULE;
		public static Block BEDROCK;
		public static Block WATER;
		public static Block LAVA;
		public static Block SAND;
		public static Block RED_SAND;
		public static Block GRAVEL;
		public static Block GOLD_ORE;
		public static Block DEEPSLATE_GOLD_ORE;
		public static Block IRON_ORE;
		public static Block DEEPSLATE_IRON_ORE;
		public static Block COAL_ORE;
		public static Block DEEPSLATE_COAL_ORE;
		public static Block NETHER_GOLD_ORE;
		public static Block OAK_LOG;
		public static Block SPRUCE_LOG;
		public static Block BIRCH_LOG;
		public static Block JUNGLE_LOG;
		public static Block ACACIA_LOG;
		public static Block DARK_OAK_LOG;
		public static Block MANGROVE_LOG;
		public static Block MANGROVE_ROOTS;
		public static Block MUDDY_MANGROVE_ROOTS;
		public static Block BAMBOO_BLOCK;
		public static Block STRIPPED_SPRUCE_LOG;
		public static Block STRIPPED_BIRCH_LOG;
		public static Block STRIPPED_JUNGLE_LOG;
		public static Block STRIPPED_ACACIA_LOG;
		public static Block STRIPPED_DARK_OAK_LOG;
		public static Block STRIPPED_OAK_LOG;
		public static Block STRIPPED_MANGROVE_LOG;
		public static Block STRIPPED_BAMBOO_BLOCK;
		public static Block OAK_WOOD;
		public static Block SPRUCE_WOOD;
		public static Block BIRCH_WOOD;
		public static Block JUNGLE_WOOD;
		public static Block ACACIA_WOOD;
		public static Block DARK_OAK_WOOD;
		public static Block MANGROVE_WOOD;
		public static Block STRIPPED_OAK_WOOD;
		public static Block STRIPPED_SPRUCE_WOOD;
		public static Block STRIPPED_BIRCH_WOOD;
		public static Block STRIPPED_JUNGLE_WOOD;
		public static Block STRIPPED_ACACIA_WOOD;
		public static Block STRIPPED_DARK_OAK_WOOD;
		public static Block STRIPPED_MANGROVE_WOOD;
		public static Block OAK_LEAVES;
		public static Block SPRUCE_LEAVES;
		public static Block BIRCH_LEAVES;
		public static Block JUNGLE_LEAVES;
		public static Block ACACIA_LEAVES;
		public static Block DARK_OAK_LEAVES;
		public static Block MANGROVE_LEAVES;
		public static Block AZALEA_LEAVES;
		public static Block FLOWERING_AZALEA_LEAVES;
		public static Block SPONGE;
		public static Block WET_SPONGE;
		public static Block GLASS;
		public static Block LAPIS_ORE;
		public static Block DEEPSLATE_LAPIS_ORE;
		public static Block LAPIS_BLOCK;
		public static Block DISPENSER;
		public static Block SANDSTONE;
		public static Block CHISELED_SANDSTONE;
		public static Block CUT_SANDSTONE;
		public static Block NOTE_BLOCK;
		public static Block WHITE_BED;
		public static Block ORANGE_BED;
		public static Block MAGENTA_BED;
		public static Block LIGHT_BLUE_BED;
		public static Block YELLOW_BED;
		public static Block LIME_BED;
		public static Block PINK_BED;
		public static Block GRAY_BED;
		public static Block LIGHT_GRAY_BED;
		public static Block CYAN_BED;
		public static Block PURPLE_BED;
		public static Block BLUE_BED;
		public static Block BROWN_BED;
		public static Block GREEN_BED;
		public static Block RED_BED;
		public static Block BLACK_BED;
		public static Block POWERED_RAIL;
		public static Block DETECTOR_RAIL;
		public static Block STICKY_PISTON;
		public static Block COBWEB;
		public static Block GRASS;
		public static Block FERN;
		public static Block DEAD_BUSH;
		public static Block SEAGRASS;
		public static Block TALL_SEAGRASS;
		public static Block PISTON;
		public static Block PISTON_HEAD;
		public static Block WHITE_WOOL;
		public static Block ORANGE_WOOL;
		public static Block MAGENTA_WOOL;
		public static Block LIGHT_BLUE_WOOL;
		public static Block YELLOW_WOOL;
		public static Block LIME_WOOL;
		public static Block PINK_WOOL;
		public static Block GRAY_WOOL;
		public static Block LIGHT_GRAY_WOOL;
		public static Block CYAN_WOOL;
		public static Block PURPLE_WOOL;
		public static Block BLUE_WOOL;
		public static Block BROWN_WOOL;
		public static Block GREEN_WOOL;
		public static Block RED_WOOL;
		public static Block BLACK_WOOL;
		public static Block MOVING_PISTON;
		public static Block DANDELION;
		public static Block POPPY;
		public static Block BLUE_ORCHID;
		public static Block ALLIUM;
		public static Block AZURE_BLUET;
		public static Block RED_TULIP;
		public static Block ORANGE_TULIP;
		public static Block WHITE_TULIP;
		public static Block PINK_TULIP;
		public static Block OXEYE_DAISY;
		public static Block CORNFLOWER;
		public static Block WITHER_ROSE;
		public static Block LILY_OF_THE_VALLEY;
		public static Block BROWN_MUSHROOM;
		public static Block RED_MUSHROOM;
		public static Block GOLD_BLOCK;
		public static Block IRON_BLOCK;
		public static Block BRICKS;
		public static Block TNT;
		public static Block BOOKSHELF;
		public static Block CHISELED_BOOKSHELF;
		public static Block MOSSY_COBBLESTONE;
		public static Block OBSIDIAN;
		public static Block TORCH;
		public static Block WALL_TORCH;
		public static Block FIRE;
		public static Block SOUL_FIRE;
		public static Block SPAWNER;
		public static Block OAK_STAIRS;
		public static Block CHEST;
		public static Block REDSTONE_WIRE;
		public static Block DIAMOND_ORE;
		public static Block DEEPSLATE_DIAMOND_ORE;
		public static Block DIAMOND_BLOCK;
		public static Block CRAFTING_TABLE;
		public static Block WHEAT;
		public static Block FARMLAND;
		public static Block FURNACE;
		public static Block OAK_SIGN;
		public static Block SPRUCE_SIGN;
		public static Block BIRCH_SIGN;
		public static Block ACACIA_SIGN;
		public static Block JUNGLE_SIGN;
		public static Block DARK_OAK_SIGN;
		public static Block MANGROVE_SIGN;
		public static Block BAMBOO_SIGN;
		public static Block OAK_DOOR;
		public static Block LADDER;
		public static Block RAIL;
		public static Block COBBLESTONE_STAIRS;
		public static Block OAK_WALL_SIGN;
		public static Block SPRUCE_WALL_SIGN;
		public static Block BIRCH_WALL_SIGN;
		public static Block ACACIA_WALL_SIGN;
		public static Block JUNGLE_WALL_SIGN;
		public static Block DARK_OAK_WALL_SIGN;
		public static Block MANGROVE_WALL_SIGN;
		public static Block BAMBOO_WALL_SIGN;
		public static Block OAK_HANGING_SIGN;
		public static Block SPRUCE_HANGING_SIGN;
		public static Block BIRCH_HANGING_SIGN;
		public static Block ACACIA_HANGING_SIGN;
		public static Block JUNGLE_HANGING_SIGN;
		public static Block DARK_OAK_HANGING_SIGN;
		public static Block CRIMSON_HANGING_SIGN;
		public static Block WARPED_HANGING_SIGN;
		public static Block MANGROVE_HANGING_SIGN;
		public static Block BAMBOO_HANGING_SIGN;
		public static Block OAK_WALL_HANGING_SIGN;
		public static Block SPRUCE_WALL_HANGING_SIGN;
		public static Block BIRCH_WALL_HANGING_SIGN;
		public static Block ACACIA_WALL_HANGING_SIGN;
		public static Block JUNGLE_WALL_HANGING_SIGN;
		public static Block DARK_OAK_WALL_HANGING_SIGN;
		public static Block MANGROVE_WALL_HANGING_SIGN;
		public static Block CRIMSON_WALL_HANGING_SIGN;
		public static Block WARPED_WALL_HANGING_SIGN;
		public static Block BAMBOO_WALL_HANGING_SIGN;
		public static Block LEVER;
		public static Block STONE_PRESSURE_PLATE;
		public static Block IRON_DOOR;
		public static Block OAK_PRESSURE_PLATE;
		public static Block SPRUCE_PRESSURE_PLATE;
		public static Block BIRCH_PRESSURE_PLATE;
		public static Block JUNGLE_PRESSURE_PLATE;
		public static Block ACACIA_PRESSURE_PLATE;
		public static Block DARK_OAK_PRESSURE_PLATE;
		public static Block MANGROVE_PRESSURE_PLATE;
		public static Block BAMBOO_PRESSURE_PLATE;
		public static Block REDSTONE_ORE;
		public static Block DEEPSLATE_REDSTONE_ORE;
		public static Block REDSTONE_TORCH;
		public static Block REDSTONE_WALL_TORCH;
		public static Block STONE_BUTTON;
		public static Block SNOW;
		public static Block ICE;
		public static Block SNOW_BLOCK;
		public static Block CACTUS;
		public static Block CLAY;
		public static Block SUGAR_CANE;
		public static Block JUKEBOX;
		public static Block OAK_FENCE;
		public static Block PUMPKIN;
		public static Block NETHERRACK;
		public static Block SOUL_SAND;
		public static Block SOUL_SOIL;
		public static Block BASALT;
		public static Block POLISHED_BASALT;
		public static Block SOUL_TORCH;
		public static Block SOUL_WALL_TORCH;
		public static Block GLOWSTONE;
		public static Block NETHER_PORTAL;
		public static Block CARVED_PUMPKIN;
		public static Block JACK_O_LANTERN;
		public static Block CAKE;
		public static Block REPEATER;
		public static Block WHITE_STAINED_GLASS;
		public static Block ORANGE_STAINED_GLASS;
		public static Block MAGENTA_STAINED_GLASS;
		public static Block LIGHT_BLUE_STAINED_GLASS;
		public static Block YELLOW_STAINED_GLASS;
		public static Block LIME_STAINED_GLASS;
		public static Block PINK_STAINED_GLASS;
		public static Block GRAY_STAINED_GLASS;
		public static Block LIGHT_GRAY_STAINED_GLASS;
		public static Block CYAN_STAINED_GLASS;
		public static Block PURPLE_STAINED_GLASS;
		public static Block BLUE_STAINED_GLASS;
		public static Block BROWN_STAINED_GLASS;
		public static Block GREEN_STAINED_GLASS;
		public static Block RED_STAINED_GLASS;
		public static Block BLACK_STAINED_GLASS;
		public static Block OAK_TRAPDOOR;
		public static Block SPRUCE_TRAPDOOR;
		public static Block BIRCH_TRAPDOOR;
		public static Block JUNGLE_TRAPDOOR;
		public static Block ACACIA_TRAPDOOR;
		public static Block DARK_OAK_TRAPDOOR;
		public static Block MANGROVE_TRAPDOOR;
		public static Block BAMBOO_TRAPDOOR;
		public static Block STONE_BRICKS;
		public static Block MOSSY_STONE_BRICKS;
		public static Block CRACKED_STONE_BRICKS;
		public static Block CHISELED_STONE_BRICKS;
		public static Block PACKED_MUD;
		public static Block MUD_BRICKS;
		public static Block INFESTED_STONE;
		public static Block INFESTED_COBBLESTONE;
		public static Block INFESTED_STONE_BRICKS;
		public static Block INFESTED_MOSSY_STONE_BRICKS;
		public static Block INFESTED_CRACKED_STONE_BRICKS;
		public static Block INFESTED_CHISELED_STONE_BRICKS;
		public static Block BROWN_MUSHROOM_BLOCK;
		public static Block RED_MUSHROOM_BLOCK;
		public static Block MUSHROOM_STEM;
		public static Block IRON_BARS;
		public static Block CHAIN;
		public static Block GLASS_PANE;
		public static Block MELON;
		public static Block ATTACHED_PUMPKIN_STEM;
		public static Block ATTACHED_MELON_STEM;
		public static Block PUMPKIN_STEM;
		public static Block MELON_STEM;
		public static Block VINE;
		public static Block GLOW_LICHEN;
		public static Block OAK_FENCE_GATE;
		public static Block BRICK_STAIRS;
		public static Block STONE_BRICK_STAIRS;
		public static Block MUD_BRICK_STAIRS;
		public static Block MYCELIUM;
		public static Block LILY_PAD;
		public static Block NETHER_BRICKS;
		public static Block NETHER_BRICK_FENCE;
		public static Block NETHER_BRICK_STAIRS;
		public static Block NETHER_WART;
		public static Block ENCHANTING_TABLE;
		public static Block BREWING_STAND;
		public static Block CAULDRON;
		public static Block WATER_CAULDRON;
		public static Block LAVA_CAULDRON;
		public static Block POWDER_SNOW_CAULDRON;
		public static Block END_PORTAL;
		public static Block END_PORTAL_FRAME;
		public static Block END_STONE;
		public static Block DRAGON_EGG;
		public static Block REDSTONE_LAMP;
		public static Block COCOA;
		public static Block SANDSTONE_STAIRS;
		public static Block EMERALD_ORE;
		public static Block DEEPSLATE_EMERALD_ORE;
		public static Block ENDER_CHEST;
		public static Block TRIPWIRE_HOOK;
		public static Block TRIPWIRE;
		public static Block EMERALD_BLOCK;
		public static Block SPRUCE_STAIRS;
		public static Block BIRCH_STAIRS;
		public static Block JUNGLE_STAIRS;
		public static Block COMMAND_BLOCK;
		public static Block BEACON;
		public static Block COBBLESTONE_WALL;
		public static Block MOSSY_COBBLESTONE_WALL;
		public static Block FLOWER_POT;
		public static Block POTTED_OAK_SAPLING;
		public static Block POTTED_SPRUCE_SAPLING;
		public static Block POTTED_BIRCH_SAPLING;
		public static Block POTTED_JUNGLE_SAPLING;
		public static Block POTTED_ACACIA_SAPLING;
		public static Block POTTED_DARK_OAK_SAPLING;
		public static Block POTTED_MANGROVE_PROPAGULE;
		public static Block POTTED_FERN;
		public static Block POTTED_DANDELION;
		public static Block POTTED_POPPY;
		public static Block POTTED_BLUE_ORCHID;
		public static Block POTTED_ALLIUM;
		public static Block POTTED_AZURE_BLUET;
		public static Block POTTED_RED_TULIP;
		public static Block POTTED_ORANGE_TULIP;
		public static Block POTTED_WHITE_TULIP;
		public static Block POTTED_PINK_TULIP;
		public static Block POTTED_OXEYE_DAISY;
		public static Block POTTED_CORNFLOWER;
		public static Block POTTED_LILY_OF_THE_VALLEY;
		public static Block POTTED_WITHER_ROSE;
		public static Block POTTED_RED_MUSHROOM;
		public static Block POTTED_BROWN_MUSHROOM;
		public static Block POTTED_DEAD_BUSH;
		public static Block POTTED_CACTUS;
		public static Block CARROTS;
		public static Block POTATOES;
		public static Block OAK_BUTTON;
		public static Block SPRUCE_BUTTON;
		public static Block BIRCH_BUTTON;
		public static Block JUNGLE_BUTTON;
		public static Block ACACIA_BUTTON;
		public static Block DARK_OAK_BUTTON;
		public static Block MANGROVE_BUTTON;
		public static Block BAMBOO_BUTTON;
		public static Block SKELETON_SKULL;
		public static Block SKELETON_WALL_SKULL;
		public static Block WITHER_SKELETON_SKULL;
		public static Block WITHER_SKELETON_WALL_SKULL;
		public static Block ZOMBIE_HEAD;
		public static Block ZOMBIE_WALL_HEAD;
		public static Block PLAYER_HEAD;
		public static Block PLAYER_WALL_HEAD;
		public static Block CREEPER_HEAD;
		public static Block CREEPER_WALL_HEAD;
		public static Block DRAGON_HEAD;
		public static Block DRAGON_WALL_HEAD;
		public static Block PIGLIN_HEAD;
		public static Block PIGLIN_WALL_HEAD;
		public static Block ANVIL;
		public static Block CHIPPED_ANVIL;
		public static Block DAMAGED_ANVIL;
		public static Block TRAPPED_CHEST;
		public static Block LIGHT_WEIGHTED_PRESSURE_PLATE;
		public static Block HEAVY_WEIGHTED_PRESSURE_PLATE;
		public static Block COMPARATOR;
		public static Block DAYLIGHT_DETECTOR;
		public static Block REDSTONE_BLOCK;
		public static Block NETHER_QUARTZ_ORE;
		public static Block HOPPER;
		public static Block QUARTZ_BLOCK;
		public static Block CHISELED_QUARTZ_BLOCK;
		public static Block QUARTZ_PILLAR;
		public static Block QUARTZ_STAIRS;
		public static Block ACTIVATOR_RAIL;
		public static Block DROPPER;
		public static Block WHITE_TERRACOTTA;
		public static Block ORANGE_TERRACOTTA;
		public static Block MAGENTA_TERRACOTTA;
		public static Block LIGHT_BLUE_TERRACOTTA;
		public static Block YELLOW_TERRACOTTA;
		public static Block LIME_TERRACOTTA;
		public static Block PINK_TERRACOTTA;
		public static Block GRAY_TERRACOTTA;
		public static Block LIGHT_GRAY_TERRACOTTA;
		public static Block CYAN_TERRACOTTA;
		public static Block PURPLE_TERRACOTTA;
		public static Block BLUE_TERRACOTTA;
		public static Block BROWN_TERRACOTTA;
		public static Block GREEN_TERRACOTTA;
		public static Block RED_TERRACOTTA;
		public static Block BLACK_TERRACOTTA;
		public static Block WHITE_STAINED_GLASS_PANE;
		public static Block ORANGE_STAINED_GLASS_PANE;
		public static Block MAGENTA_STAINED_GLASS_PANE;
		public static Block LIGHT_BLUE_STAINED_GLASS_PANE;
		public static Block YELLOW_STAINED_GLASS_PANE;
		public static Block LIME_STAINED_GLASS_PANE;
		public static Block PINK_STAINED_GLASS_PANE;
		public static Block GRAY_STAINED_GLASS_PANE;
		public static Block LIGHT_GRAY_STAINED_GLASS_PANE;
		public static Block CYAN_STAINED_GLASS_PANE;
		public static Block PURPLE_STAINED_GLASS_PANE;
		public static Block BLUE_STAINED_GLASS_PANE;
		public static Block BROWN_STAINED_GLASS_PANE;
		public static Block GREEN_STAINED_GLASS_PANE;
		public static Block RED_STAINED_GLASS_PANE;
		public static Block BLACK_STAINED_GLASS_PANE;
		public static Block ACACIA_STAIRS;
		public static Block DARK_OAK_STAIRS;
		public static Block MANGROVE_STAIRS;
		public static Block BAMBOO_STAIRS;
		public static Block BAMBOO_MOSAIC_STAIRS;
		public static Block SLIME_BLOCK;
		public static Block BARRIER;
		public static Block LIGHT;
		public static Block IRON_TRAPDOOR;
		public static Block PRISMARINE;
		public static Block PRISMARINE_BRICKS;
		public static Block DARK_PRISMARINE;
		public static Block PRISMARINE_STAIRS;
		public static Block PRISMARINE_BRICK_STAIRS;
		public static Block DARK_PRISMARINE_STAIRS;
		public static Block PRISMARINE_SLAB;
		public static Block PRISMARINE_BRICK_SLAB;
		public static Block DARK_PRISMARINE_SLAB;
		public static Block SEA_LANTERN;
		public static Block HAY_BLOCK;
		public static Block WHITE_CARPET;
		public static Block ORANGE_CARPET;
		public static Block MAGENTA_CARPET;
		public static Block LIGHT_BLUE_CARPET;
		public static Block YELLOW_CARPET;
		public static Block LIME_CARPET;
		public static Block PINK_CARPET;
		public static Block GRAY_CARPET;
		public static Block LIGHT_GRAY_CARPET;
		public static Block CYAN_CARPET;
		public static Block PURPLE_CARPET;
		public static Block BLUE_CARPET;
		public static Block BROWN_CARPET;
		public static Block GREEN_CARPET;
		public static Block RED_CARPET;
		public static Block BLACK_CARPET;
		public static Block TERRACOTTA;
		public static Block COAL_BLOCK;
		public static Block PACKED_ICE;
		public static Block SUNFLOWER;
		public static Block LILAC;
		public static Block ROSE_BUSH;
		public static Block PEONY;
		public static Block TALL_GRASS;
		public static Block LARGE_FERN;
		public static Block WHITE_BANNER;
		public static Block ORANGE_BANNER;
		public static Block MAGENTA_BANNER;
		public static Block LIGHT_BLUE_BANNER;
		public static Block YELLOW_BANNER;
		public static Block LIME_BANNER;
		public static Block PINK_BANNER;
		public static Block GRAY_BANNER;
		public static Block LIGHT_GRAY_BANNER;
		public static Block CYAN_BANNER;
		public static Block PURPLE_BANNER;
		public static Block BLUE_BANNER;
		public static Block BROWN_BANNER;
		public static Block GREEN_BANNER;
		public static Block RED_BANNER;
		public static Block BLACK_BANNER;
		public static Block WHITE_WALL_BANNER;
		public static Block ORANGE_WALL_BANNER;
		public static Block MAGENTA_WALL_BANNER;
		public static Block LIGHT_BLUE_WALL_BANNER;
		public static Block YELLOW_WALL_BANNER;
		public static Block LIME_WALL_BANNER;
		public static Block PINK_WALL_BANNER;
		public static Block GRAY_WALL_BANNER;
		public static Block LIGHT_GRAY_WALL_BANNER;
		public static Block CYAN_WALL_BANNER;
		public static Block PURPLE_WALL_BANNER;
		public static Block BLUE_WALL_BANNER;
		public static Block BROWN_WALL_BANNER;
		public static Block GREEN_WALL_BANNER;
		public static Block RED_WALL_BANNER;
		public static Block BLACK_WALL_BANNER;
		public static Block RED_SANDSTONE;
		public static Block CHISELED_RED_SANDSTONE;
		public static Block CUT_RED_SANDSTONE;
		public static Block RED_SANDSTONE_STAIRS;
		public static Block OAK_SLAB;
		public static Block SPRUCE_SLAB;
		public static Block BIRCH_SLAB;
		public static Block JUNGLE_SLAB;
		public static Block ACACIA_SLAB;
		public static Block DARK_OAK_SLAB;
		public static Block MANGROVE_SLAB;
		public static Block BAMBOO_SLAB;
		public static Block BAMBOO_MOSAIC_SLAB;
		public static Block STONE_SLAB;
		public static Block SMOOTH_STONE_SLAB;
		public static Block SANDSTONE_SLAB;
		public static Block CUT_SANDSTONE_SLAB;
		public static Block PETRIFIED_OAK_SLAB;
		public static Block COBBLESTONE_SLAB;
		public static Block BRICK_SLAB;
		public static Block STONE_BRICK_SLAB;
		public static Block MUD_BRICK_SLAB;
		public static Block NETHER_BRICK_SLAB;
		public static Block QUARTZ_SLAB;
		public static Block RED_SANDSTONE_SLAB;
		public static Block CUT_RED_SANDSTONE_SLAB;
		public static Block PURPUR_SLAB;
		public static Block SMOOTH_STONE;
		public static Block SMOOTH_SANDSTONE;
		public static Block SMOOTH_QUARTZ;
		public static Block SMOOTH_RED_SANDSTONE;
		public static Block SPRUCE_FENCE_GATE;
		public static Block BIRCH_FENCE_GATE;
		public static Block JUNGLE_FENCE_GATE;
		public static Block ACACIA_FENCE_GATE;
		public static Block DARK_OAK_FENCE_GATE;
		public static Block MANGROVE_FENCE_GATE;
		public static Block BAMBOO_FENCE_GATE;
		public static Block SPRUCE_FENCE;
		public static Block BIRCH_FENCE;
		public static Block JUNGLE_FENCE;
		public static Block ACACIA_FENCE;
		public static Block DARK_OAK_FENCE;
		public static Block MANGROVE_FENCE;
		public static Block BAMBOO_FENCE;
		public static Block SPRUCE_DOOR;
		public static Block BIRCH_DOOR;
		public static Block JUNGLE_DOOR;
		public static Block ACACIA_DOOR;
		public static Block DARK_OAK_DOOR;
		public static Block MANGROVE_DOOR;
		public static Block BAMBOO_DOOR;
		public static Block END_ROD;
		public static Block CHORUS_PLANT;
		public static Block CHORUS_FLOWER;
		public static Block PURPUR_BLOCK;
		public static Block PURPUR_PILLAR;
		public static Block PURPUR_STAIRS;
		public static Block END_STONE_BRICKS;
		public static Block BEETROOTS;
		public static Block DIRT_PATH;
		public static Block END_GATEWAY;
		public static Block REPEATING_COMMAND_BLOCK;
		public static Block CHAIN_COMMAND_BLOCK;
		public static Block FROSTED_ICE;
		public static Block MAGMA_BLOCK;
		public static Block NETHER_WART_BLOCK;
		public static Block RED_NETHER_BRICKS;
		public static Block BONE_BLOCK;
		public static Block STRUCTURE_VOID;
		public static Block OBSERVER;
		public static Block SHULKER_BOX;
		public static Block WHITE_SHULKER_BOX;
		public static Block ORANGE_SHULKER_BOX;
		public static Block MAGENTA_SHULKER_BOX;
		public static Block LIGHT_BLUE_SHULKER_BOX;
		public static Block YELLOW_SHULKER_BOX;
		public static Block LIME_SHULKER_BOX;
		public static Block PINK_SHULKER_BOX;
		public static Block GRAY_SHULKER_BOX;
		public static Block LIGHT_GRAY_SHULKER_BOX;
		public static Block CYAN_SHULKER_BOX;
		public static Block PURPLE_SHULKER_BOX;
		public static Block BLUE_SHULKER_BOX;
		public static Block BROWN_SHULKER_BOX;
		public static Block GREEN_SHULKER_BOX;
		public static Block RED_SHULKER_BOX;
		public static Block BLACK_SHULKER_BOX;
		public static Block WHITE_GLAZED_TERRACOTTA;
		public static Block ORANGE_GLAZED_TERRACOTTA;
		public static Block MAGENTA_GLAZED_TERRACOTTA;
		public static Block LIGHT_BLUE_GLAZED_TERRACOTTA;
		public static Block YELLOW_GLAZED_TERRACOTTA;
		public static Block LIME_GLAZED_TERRACOTTA;
		public static Block PINK_GLAZED_TERRACOTTA;
		public static Block GRAY_GLAZED_TERRACOTTA;
		public static Block LIGHT_GRAY_GLAZED_TERRACOTTA;
		public static Block CYAN_GLAZED_TERRACOTTA;
		public static Block PURPLE_GLAZED_TERRACOTTA;
		public static Block BLUE_GLAZED_TERRACOTTA;
		public static Block BROWN_GLAZED_TERRACOTTA;
		public static Block GREEN_GLAZED_TERRACOTTA;
		public static Block RED_GLAZED_TERRACOTTA;
		public static Block BLACK_GLAZED_TERRACOTTA;
		public static Block WHITE_CONCRETE;
		public static Block ORANGE_CONCRETE;
		public static Block MAGENTA_CONCRETE;
		public static Block LIGHT_BLUE_CONCRETE;
		public static Block YELLOW_CONCRETE;
		public static Block LIME_CONCRETE;
		public static Block PINK_CONCRETE;
		public static Block GRAY_CONCRETE;
		public static Block LIGHT_GRAY_CONCRETE;
		public static Block CYAN_CONCRETE;
		public static Block PURPLE_CONCRETE;
		public static Block BLUE_CONCRETE;
		public static Block BROWN_CONCRETE;
		public static Block GREEN_CONCRETE;
		public static Block RED_CONCRETE;
		public static Block BLACK_CONCRETE;
		public static Block WHITE_CONCRETE_POWDER;
		public static Block ORANGE_CONCRETE_POWDER;
		public static Block MAGENTA_CONCRETE_POWDER;
		public static Block LIGHT_BLUE_CONCRETE_POWDER;
		public static Block YELLOW_CONCRETE_POWDER;
		public static Block LIME_CONCRETE_POWDER;
		public static Block PINK_CONCRETE_POWDER;
		public static Block GRAY_CONCRETE_POWDER;
		public static Block LIGHT_GRAY_CONCRETE_POWDER;
		public static Block CYAN_CONCRETE_POWDER;
		public static Block PURPLE_CONCRETE_POWDER;
		public static Block BLUE_CONCRETE_POWDER;
		public static Block BROWN_CONCRETE_POWDER;
		public static Block GREEN_CONCRETE_POWDER;
		public static Block RED_CONCRETE_POWDER;
		public static Block BLACK_CONCRETE_POWDER;
		public static Block KELP;
		public static Block KELP_PLANT;
		public static Block DRIED_KELP_BLOCK;
		public static Block TURTLE_EGG;
		public static Block DEAD_TUBE_CORAL_BLOCK;
		public static Block DEAD_BRAIN_CORAL_BLOCK;
		public static Block DEAD_BUBBLE_CORAL_BLOCK;
		public static Block DEAD_FIRE_CORAL_BLOCK;
		public static Block DEAD_HORN_CORAL_BLOCK;
		public static Block TUBE_CORAL_BLOCK;
		public static Block BRAIN_CORAL_BLOCK;
		public static Block BUBBLE_CORAL_BLOCK;
		public static Block FIRE_CORAL_BLOCK;
		public static Block HORN_CORAL_BLOCK;
		public static Block DEAD_TUBE_CORAL;
		public static Block DEAD_BRAIN_CORAL;
		public static Block DEAD_BUBBLE_CORAL;
		public static Block DEAD_FIRE_CORAL;
		public static Block DEAD_HORN_CORAL;
		public static Block TUBE_CORAL;
		public static Block BRAIN_CORAL;
		public static Block BUBBLE_CORAL;
		public static Block FIRE_CORAL;
		public static Block HORN_CORAL;
		public static Block DEAD_TUBE_CORAL_FAN;
		public static Block DEAD_BRAIN_CORAL_FAN;
		public static Block DEAD_BUBBLE_CORAL_FAN;
		public static Block DEAD_FIRE_CORAL_FAN;
		public static Block DEAD_HORN_CORAL_FAN;
		public static Block TUBE_CORAL_FAN;
		public static Block BRAIN_CORAL_FAN;
		public static Block BUBBLE_CORAL_FAN;
		public static Block FIRE_CORAL_FAN;
		public static Block HORN_CORAL_FAN;
		public static Block DEAD_TUBE_CORAL_WALL_FAN;
		public static Block DEAD_BRAIN_CORAL_WALL_FAN;
		public static Block DEAD_BUBBLE_CORAL_WALL_FAN;
		public static Block DEAD_FIRE_CORAL_WALL_FAN;
		public static Block DEAD_HORN_CORAL_WALL_FAN;
		public static Block TUBE_CORAL_WALL_FAN;
		public static Block BRAIN_CORAL_WALL_FAN;
		public static Block BUBBLE_CORAL_WALL_FAN;
		public static Block FIRE_CORAL_WALL_FAN;
		public static Block HORN_CORAL_WALL_FAN;
		public static Block SEA_PICKLE;
		public static Block BLUE_ICE;
		public static Block CONDUIT;
		public static Block BAMBOO_SAPLING;
		public static Block BAMBOO;
		public static Block POTTED_BAMBOO;
		public static Block VOID_AIR;
		public static Block CAVE_AIR;
		public static Block BUBBLE_COLUMN;
		public static Block POLISHED_GRANITE_STAIRS;
		public static Block SMOOTH_RED_SANDSTONE_STAIRS;
		public static Block MOSSY_STONE_BRICK_STAIRS;
		public static Block POLISHED_DIORITE_STAIRS;
		public static Block MOSSY_COBBLESTONE_STAIRS;
		public static Block END_STONE_BRICK_STAIRS;
		public static Block STONE_STAIRS;
		public static Block SMOOTH_SANDSTONE_STAIRS;
		public static Block SMOOTH_QUARTZ_STAIRS;
		public static Block GRANITE_STAIRS;
		public static Block ANDESITE_STAIRS;
		public static Block RED_NETHER_BRICK_STAIRS;
		public static Block POLISHED_ANDESITE_STAIRS;
		public static Block DIORITE_STAIRS;
		public static Block POLISHED_GRANITE_SLAB;
		public static Block SMOOTH_RED_SANDSTONE_SLAB;
		public static Block MOSSY_STONE_BRICK_SLAB;
		public static Block POLISHED_DIORITE_SLAB;
		public static Block MOSSY_COBBLESTONE_SLAB;
		public static Block END_STONE_BRICK_SLAB;
		public static Block SMOOTH_SANDSTONE_SLAB;
		public static Block SMOOTH_QUARTZ_SLAB;
		public static Block GRANITE_SLAB;
		public static Block ANDESITE_SLAB;
		public static Block RED_NETHER_BRICK_SLAB;
		public static Block POLISHED_ANDESITE_SLAB;
		public static Block DIORITE_SLAB;
		public static Block BRICK_WALL;
		public static Block PRISMARINE_WALL;
		public static Block RED_SANDSTONE_WALL;
		public static Block MOSSY_STONE_BRICK_WALL;
		public static Block GRANITE_WALL;
		public static Block STONE_BRICK_WALL;
		public static Block MUD_BRICK_WALL;
		public static Block NETHER_BRICK_WALL;
		public static Block ANDESITE_WALL;
		public static Block RED_NETHER_BRICK_WALL;
		public static Block SANDSTONE_WALL;
		public static Block END_STONE_BRICK_WALL;
		public static Block DIORITE_WALL;
		public static Block SCAFFOLDING;
		public static Block LOOM;
		public static Block BARREL;
		public static Block SMOKER;
		public static Block BLAST_FURNACE;
		public static Block CARTOGRAPHY_TABLE;
		public static Block FLETCHING_TABLE;
		public static Block GRINDSTONE;
		public static Block LECTERN;
		public static Block SMITHING_TABLE;
		public static Block STONECUTTER;
		public static Block BELL;
		public static Block LANTERN;
		public static Block SOUL_LANTERN;
		public static Block CAMPFIRE;
		public static Block SOUL_CAMPFIRE;
		public static Block SWEET_BERRY_BUSH;
		public static Block WARPED_STEM;
		public static Block STRIPPED_WARPED_STEM;
		public static Block WARPED_HYPHAE;
		public static Block STRIPPED_WARPED_HYPHAE;
		public static Block WARPED_NYLIUM;
		public static Block WARPED_FUNGUS;
		public static Block WARPED_WART_BLOCK;
		public static Block WARPED_ROOTS;
		public static Block NETHER_SPROUTS;
		public static Block CRIMSON_STEM;
		public static Block STRIPPED_CRIMSON_STEM;
		public static Block CRIMSON_HYPHAE;
		public static Block STRIPPED_CRIMSON_HYPHAE;
		public static Block CRIMSON_NYLIUM;
		public static Block CRIMSON_FUNGUS;
		public static Block SHROOMLIGHT;
		public static Block WEEPING_VINES;
		public static Block WEEPING_VINES_PLANT;
		public static Block TWISTING_VINES;
		public static Block TWISTING_VINES_PLANT;
		public static Block CRIMSON_ROOTS;
		public static Block CRIMSON_PLANKS;
		public static Block WARPED_PLANKS;
		public static Block CRIMSON_SLAB;
		public static Block WARPED_SLAB;
		public static Block CRIMSON_PRESSURE_PLATE;
		public static Block WARPED_PRESSURE_PLATE;
		public static Block CRIMSON_FENCE;
		public static Block WARPED_FENCE;
		public static Block CRIMSON_TRAPDOOR;
		public static Block WARPED_TRAPDOOR;
		public static Block CRIMSON_FENCE_GATE;
		public static Block WARPED_FENCE_GATE;
		public static Block CRIMSON_STAIRS;
		public static Block WARPED_STAIRS;
		public static Block CRIMSON_BUTTON;
		public static Block WARPED_BUTTON;
		public static Block CRIMSON_DOOR;
		public static Block WARPED_DOOR;
		public static Block CRIMSON_SIGN;
		public static Block WARPED_SIGN;
		public static Block CRIMSON_WALL_SIGN;
		public static Block WARPED_WALL_SIGN;
		public static Block STRUCTURE_BLOCK;
		public static Block JIGSAW;
		public static Block COMPOSTER;
		public static Block TARGET;
		public static Block BEE_NEST;
		public static Block BEEHIVE;
		public static Block HONEY_BLOCK;
		public static Block HONEYCOMB_BLOCK;
		public static Block NETHERITE_BLOCK;
		public static Block ANCIENT_DEBRIS;
		public static Block CRYING_OBSIDIAN;
		public static Block RESPAWN_ANCHOR;
		public static Block POTTED_CRIMSON_FUNGUS;
		public static Block POTTED_WARPED_FUNGUS;
		public static Block POTTED_CRIMSON_ROOTS;
		public static Block POTTED_WARPED_ROOTS;
		public static Block LODESTONE;
		public static Block BLACKSTONE;
		public static Block BLACKSTONE_STAIRS;
		public static Block BLACKSTONE_WALL;
		public static Block BLACKSTONE_SLAB;
		public static Block POLISHED_BLACKSTONE;
		public static Block POLISHED_BLACKSTONE_BRICKS;
		public static Block CRACKED_POLISHED_BLACKSTONE_BRICKS;
		public static Block CHISELED_POLISHED_BLACKSTONE;
		public static Block POLISHED_BLACKSTONE_BRICK_SLAB;
		public static Block POLISHED_BLACKSTONE_BRICK_STAIRS;
		public static Block POLISHED_BLACKSTONE_BRICK_WALL;
		public static Block GILDED_BLACKSTONE;
		public static Block POLISHED_BLACKSTONE_STAIRS;
		public static Block POLISHED_BLACKSTONE_SLAB;
		public static Block POLISHED_BLACKSTONE_PRESSURE_PLATE;
		public static Block POLISHED_BLACKSTONE_BUTTON;
		public static Block POLISHED_BLACKSTONE_WALL;
		public static Block CHISELED_NETHER_BRICKS;
		public static Block CRACKED_NETHER_BRICKS;
		public static Block QUARTZ_BRICKS;
		public static Block CANDLE;
		public static Block WHITE_CANDLE;
		public static Block ORANGE_CANDLE;
		public static Block MAGENTA_CANDLE;
		public static Block LIGHT_BLUE_CANDLE;
		public static Block YELLOW_CANDLE;
		public static Block LIME_CANDLE;
		public static Block PINK_CANDLE;
		public static Block GRAY_CANDLE;
		public static Block LIGHT_GRAY_CANDLE;
		public static Block CYAN_CANDLE;
		public static Block PURPLE_CANDLE;
		public static Block BLUE_CANDLE;
		public static Block BROWN_CANDLE;
		public static Block GREEN_CANDLE;
		public static Block RED_CANDLE;
		public static Block BLACK_CANDLE;
		public static Block CANDLE_CAKE;
		public static Block WHITE_CANDLE_CAKE;
		public static Block ORANGE_CANDLE_CAKE;
		public static Block MAGENTA_CANDLE_CAKE;
		public static Block LIGHT_BLUE_CANDLE_CAKE;
		public static Block YELLOW_CANDLE_CAKE;
		public static Block LIME_CANDLE_CAKE;
		public static Block PINK_CANDLE_CAKE;
		public static Block GRAY_CANDLE_CAKE;
		public static Block LIGHT_GRAY_CANDLE_CAKE;
		public static Block CYAN_CANDLE_CAKE;
		public static Block PURPLE_CANDLE_CAKE;
		public static Block BLUE_CANDLE_CAKE;
		public static Block BROWN_CANDLE_CAKE;
		public static Block GREEN_CANDLE_CAKE;
		public static Block RED_CANDLE_CAKE;
		public static Block BLACK_CANDLE_CAKE;
		public static Block AMETHYST_BLOCK;
		public static Block BUDDING_AMETHYST;
		public static Block AMETHYST_CLUSTER;
		public static Block LARGE_AMETHYST_BUD;
		public static Block MEDIUM_AMETHYST_BUD;
		public static Block SMALL_AMETHYST_BUD;
		public static Block TUFF;
		public static Block CALCITE;
		public static Block TINTED_GLASS;
		public static Block POWDER_SNOW;
		public static Block SCULK_SENSOR;
		public static Block SCULK;
		public static Block SCULK_VEIN;
		public static Block SCULK_CATALYST;
		public static Block SCULK_SHRIEKER;
		public static Block OXIDIZED_COPPER;
		public static Block WEATHERED_COPPER;
		public static Block EXPOSED_COPPER;
		public static Block COPPER_BLOCK;
		public static Block COPPER_ORE;
		public static Block DEEPSLATE_COPPER_ORE;
		public static Block OXIDIZED_CUT_COPPER;
		public static Block WEATHERED_CUT_COPPER;
		public static Block EXPOSED_CUT_COPPER;
		public static Block CUT_COPPER;
		public static Block OXIDIZED_CUT_COPPER_STAIRS;
		public static Block WEATHERED_CUT_COPPER_STAIRS;
		public static Block EXPOSED_CUT_COPPER_STAIRS;
		public static Block CUT_COPPER_STAIRS;
		public static Block OXIDIZED_CUT_COPPER_SLAB;
		public static Block WEATHERED_CUT_COPPER_SLAB;
		public static Block EXPOSED_CUT_COPPER_SLAB;
		public static Block CUT_COPPER_SLAB;
		public static Block WAXED_COPPER_BLOCK;
		public static Block WAXED_WEATHERED_COPPER;
		public static Block WAXED_EXPOSED_COPPER;
		public static Block WAXED_OXIDIZED_COPPER;
		public static Block WAXED_OXIDIZED_CUT_COPPER;
		public static Block WAXED_WEATHERED_CUT_COPPER;
		public static Block WAXED_EXPOSED_CUT_COPPER;
		public static Block WAXED_CUT_COPPER;
		public static Block WAXED_OXIDIZED_CUT_COPPER_STAIRS;
		public static Block WAXED_WEATHERED_CUT_COPPER_STAIRS;
		public static Block WAXED_EXPOSED_CUT_COPPER_STAIRS;
		public static Block WAXED_CUT_COPPER_STAIRS;
		public static Block WAXED_OXIDIZED_CUT_COPPER_SLAB;
		public static Block WAXED_WEATHERED_CUT_COPPER_SLAB;
		public static Block WAXED_EXPOSED_CUT_COPPER_SLAB;
		public static Block WAXED_CUT_COPPER_SLAB;
		public static Block LIGHTNING_ROD;
		public static Block POINTED_DRIPSTONE;
		public static Block DRIPSTONE_BLOCK;
		public static Block CAVE_VINES;
		public static Block CAVE_VINES_PLANT;
		public static Block SPORE_BLOSSOM;
		public static Block AZALEA;
		public static Block FLOWERING_AZALEA;
		public static Block MOSS_CARPET;
		public static Block MOSS_BLOCK;
		public static Block BIG_DRIPLEAF;
		public static Block BIG_DRIPLEAF_STEM;
		public static Block SMALL_DRIPLEAF;
		public static Block HANGING_ROOTS;
		public static Block ROOTED_DIRT;
		public static Block MUD;
		public static Block DEEPSLATE;
		public static Block COBBLED_DEEPSLATE;
		public static Block COBBLED_DEEPSLATE_STAIRS;
		public static Block COBBLED_DEEPSLATE_SLAB;
		public static Block COBBLED_DEEPSLATE_WALL;
		public static Block POLISHED_DEEPSLATE;
		public static Block POLISHED_DEEPSLATE_STAIRS;
		public static Block POLISHED_DEEPSLATE_SLAB;
		public static Block POLISHED_DEEPSLATE_WALL;
		public static Block DEEPSLATE_TILES;
		public static Block DEEPSLATE_TILE_STAIRS;
		public static Block DEEPSLATE_TILE_SLAB;
		public static Block DEEPSLATE_TILE_WALL;
		public static Block DEEPSLATE_BRICKS;
		public static Block DEEPSLATE_BRICK_STAIRS;
		public static Block DEEPSLATE_BRICK_SLAB;
		public static Block DEEPSLATE_BRICK_WALL;
		public static Block CHISELED_DEEPSLATE;
		public static Block CRACKED_DEEPSLATE_BRICKS;
		public static Block CRACKED_DEEPSLATE_TILES;
		public static Block INFESTED_DEEPSLATE;
		public static Block SMOOTH_BASALT;
		public static Block RAW_IRON_BLOCK;
		public static Block RAW_COPPER_BLOCK;
		public static Block RAW_GOLD_BLOCK;
		public static Block POTTED_AZALEA_BUSH;
		public static Block POTTED_FLOWERING_AZALEA_BUSH;
		public static Block OCHRE_FROGLIGHT;
		public static Block VERDANT_FROGLIGHT;
		public static Block PEARLESCENT_FROGLIGHT;
		public static Block FROGSPAWN;
		public static Block REINFORCED_DEEPSLATE;

		public static void Register() {
			BeforeRegister();

			AIR = Register(new .(scope .("minecraft:air"), 0, scope BlockSettings().Transparent().NoCollision()));
			STONE = Register(new .(scope .("minecraft:stone"), 1, scope BlockSettings()));
			GRANITE = Register(new .(scope .("minecraft:granite"), 2, scope BlockSettings()));
			POLISHED_GRANITE = Register(new .(scope .("minecraft:polished_granite"), 3, scope BlockSettings()));
			DIORITE = Register(new .(scope .("minecraft:diorite"), 4, scope BlockSettings()));
			POLISHED_DIORITE = Register(new .(scope .("minecraft:polished_diorite"), 5, scope BlockSettings()));
			ANDESITE = Register(new .(scope .("minecraft:andesite"), 6, scope BlockSettings()));
			POLISHED_ANDESITE = Register(new .(scope .("minecraft:polished_andesite"), 7, scope BlockSettings()));
			GRASS_BLOCK = Register(new .(scope .("minecraft:grass_block"), 8, scope BlockSettings()), Properties.SNOWY);
			DIRT = Register(new .(scope .("minecraft:dirt"), 9, scope BlockSettings()));
			COARSE_DIRT = Register(new .(scope .("minecraft:coarse_dirt"), 10, scope BlockSettings()));
			PODZOL = Register(new .(scope .("minecraft:podzol"), 11, scope BlockSettings()), Properties.SNOWY);
			COBBLESTONE = Register(new .(scope .("minecraft:cobblestone"), 12, scope BlockSettings()));
			OAK_PLANKS = Register(new .(scope .("minecraft:oak_planks"), 13, scope BlockSettings()));
			SPRUCE_PLANKS = Register(new .(scope .("minecraft:spruce_planks"), 14, scope BlockSettings()));
			BIRCH_PLANKS = Register(new .(scope .("minecraft:birch_planks"), 15, scope BlockSettings()));
			JUNGLE_PLANKS = Register(new .(scope .("minecraft:jungle_planks"), 16, scope BlockSettings()));
			ACACIA_PLANKS = Register(new .(scope .("minecraft:acacia_planks"), 17, scope BlockSettings()));
			DARK_OAK_PLANKS = Register(new .(scope .("minecraft:dark_oak_planks"), 18, scope BlockSettings()));
			MANGROVE_PLANKS = Register(new .(scope .("minecraft:mangrove_planks"), 19, scope BlockSettings()));
			BAMBOO_PLANKS = Register(new .(scope .("minecraft:bamboo_planks"), 20, scope BlockSettings()));
			BAMBOO_MOSAIC = Register(new .(scope .("minecraft:bamboo_mosaic"), 21, scope BlockSettings()));
			OAK_SAPLING = Register(new .(scope .("minecraft:oak_sapling"), 22, scope BlockSettings().Transparent().NoCollision()), Properties.STAGE);
			SPRUCE_SAPLING = Register(new .(scope .("minecraft:spruce_sapling"), 23, scope BlockSettings().Transparent().NoCollision()), Properties.STAGE);
			BIRCH_SAPLING = Register(new .(scope .("minecraft:birch_sapling"), 24, scope BlockSettings().Transparent().NoCollision()), Properties.STAGE);
			JUNGLE_SAPLING = Register(new .(scope .("minecraft:jungle_sapling"), 25, scope BlockSettings().Transparent().NoCollision()), Properties.STAGE);
			ACACIA_SAPLING = Register(new .(scope .("minecraft:acacia_sapling"), 26, scope BlockSettings().Transparent().NoCollision()), Properties.STAGE);
			DARK_OAK_SAPLING = Register(new .(scope .("minecraft:dark_oak_sapling"), 27, scope BlockSettings().Transparent().NoCollision()), Properties.STAGE);
			MANGROVE_PROPAGULE = Register(new .(scope .("minecraft:mangrove_propagule"), 28, scope BlockSettings().Transparent().NoCollision()), Properties.STAGE, Properties.AGE_1, Properties.WATERLOGGED, Properties.HANGING);
			BEDROCK = Register(new .(scope .("minecraft:bedrock"), 29, scope BlockSettings()));
			WATER = Register(new .(scope .("minecraft:water"), 30, scope BlockSettings().Transparent().NoCollision()), Properties.LEVEL_1);
			LAVA = Register(new .(scope .("minecraft:lava"), 31, scope BlockSettings().Transparent().NoCollision()), Properties.LEVEL_1);
			SAND = Register(new .(scope .("minecraft:sand"), 32, scope BlockSettings()));
			RED_SAND = Register(new .(scope .("minecraft:red_sand"), 33, scope BlockSettings()));
			GRAVEL = Register(new .(scope .("minecraft:gravel"), 34, scope BlockSettings()));
			GOLD_ORE = Register(new .(scope .("minecraft:gold_ore"), 35, scope BlockSettings()));
			DEEPSLATE_GOLD_ORE = Register(new .(scope .("minecraft:deepslate_gold_ore"), 36, scope BlockSettings()));
			IRON_ORE = Register(new .(scope .("minecraft:iron_ore"), 37, scope BlockSettings()));
			DEEPSLATE_IRON_ORE = Register(new .(scope .("minecraft:deepslate_iron_ore"), 38, scope BlockSettings()));
			COAL_ORE = Register(new .(scope .("minecraft:coal_ore"), 39, scope BlockSettings()));
			DEEPSLATE_COAL_ORE = Register(new .(scope .("minecraft:deepslate_coal_ore"), 40, scope BlockSettings()));
			NETHER_GOLD_ORE = Register(new .(scope .("minecraft:nether_gold_ore"), 41, scope BlockSettings()));
			OAK_LOG = Register(new .(scope .("minecraft:oak_log"), 42, scope BlockSettings()), Properties.AXIS_1);
			SPRUCE_LOG = Register(new .(scope .("minecraft:spruce_log"), 43, scope BlockSettings()), Properties.AXIS_1);
			BIRCH_LOG = Register(new .(scope .("minecraft:birch_log"), 44, scope BlockSettings()), Properties.AXIS_1);
			JUNGLE_LOG = Register(new .(scope .("minecraft:jungle_log"), 45, scope BlockSettings()), Properties.AXIS_1);
			ACACIA_LOG = Register(new .(scope .("minecraft:acacia_log"), 46, scope BlockSettings()), Properties.AXIS_1);
			DARK_OAK_LOG = Register(new .(scope .("minecraft:dark_oak_log"), 47, scope BlockSettings()), Properties.AXIS_1);
			MANGROVE_LOG = Register(new .(scope .("minecraft:mangrove_log"), 48, scope BlockSettings()), Properties.AXIS_1);
			MANGROVE_ROOTS = Register(new .(scope .("minecraft:mangrove_roots"), 49, scope BlockSettings()), Properties.WATERLOGGED);
			MUDDY_MANGROVE_ROOTS = Register(new .(scope .("minecraft:muddy_mangrove_roots"), 50, scope BlockSettings()), Properties.AXIS_1);
			BAMBOO_BLOCK = Register(new .(scope .("minecraft:bamboo_block"), 51, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_SPRUCE_LOG = Register(new .(scope .("minecraft:stripped_spruce_log"), 52, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_BIRCH_LOG = Register(new .(scope .("minecraft:stripped_birch_log"), 53, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_JUNGLE_LOG = Register(new .(scope .("minecraft:stripped_jungle_log"), 54, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_ACACIA_LOG = Register(new .(scope .("minecraft:stripped_acacia_log"), 55, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_DARK_OAK_LOG = Register(new .(scope .("minecraft:stripped_dark_oak_log"), 56, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_OAK_LOG = Register(new .(scope .("minecraft:stripped_oak_log"), 57, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_MANGROVE_LOG = Register(new .(scope .("minecraft:stripped_mangrove_log"), 58, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_BAMBOO_BLOCK = Register(new .(scope .("minecraft:stripped_bamboo_block"), 59, scope BlockSettings()), Properties.AXIS_1);
			OAK_WOOD = Register(new .(scope .("minecraft:oak_wood"), 60, scope BlockSettings()), Properties.AXIS_1);
			SPRUCE_WOOD = Register(new .(scope .("minecraft:spruce_wood"), 61, scope BlockSettings()), Properties.AXIS_1);
			BIRCH_WOOD = Register(new .(scope .("minecraft:birch_wood"), 62, scope BlockSettings()), Properties.AXIS_1);
			JUNGLE_WOOD = Register(new .(scope .("minecraft:jungle_wood"), 63, scope BlockSettings()), Properties.AXIS_1);
			ACACIA_WOOD = Register(new .(scope .("minecraft:acacia_wood"), 64, scope BlockSettings()), Properties.AXIS_1);
			DARK_OAK_WOOD = Register(new .(scope .("minecraft:dark_oak_wood"), 65, scope BlockSettings()), Properties.AXIS_1);
			MANGROVE_WOOD = Register(new .(scope .("minecraft:mangrove_wood"), 66, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_OAK_WOOD = Register(new .(scope .("minecraft:stripped_oak_wood"), 67, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_SPRUCE_WOOD = Register(new .(scope .("minecraft:stripped_spruce_wood"), 68, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_BIRCH_WOOD = Register(new .(scope .("minecraft:stripped_birch_wood"), 69, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_JUNGLE_WOOD = Register(new .(scope .("minecraft:stripped_jungle_wood"), 70, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_ACACIA_WOOD = Register(new .(scope .("minecraft:stripped_acacia_wood"), 71, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_DARK_OAK_WOOD = Register(new .(scope .("minecraft:stripped_dark_oak_wood"), 72, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_MANGROVE_WOOD = Register(new .(scope .("minecraft:stripped_mangrove_wood"), 73, scope BlockSettings()), Properties.AXIS_1);
			OAK_LEAVES = Register(new .(scope .("minecraft:oak_leaves"), 74, scope BlockSettings().Transparent()), Properties.DISTANCE_1, Properties.PERSISTENT, Properties.WATERLOGGED);
			SPRUCE_LEAVES = Register(new .(scope .("minecraft:spruce_leaves"), 75, scope BlockSettings().Transparent()), Properties.DISTANCE_1, Properties.PERSISTENT, Properties.WATERLOGGED);
			BIRCH_LEAVES = Register(new .(scope .("minecraft:birch_leaves"), 76, scope BlockSettings().Transparent()), Properties.DISTANCE_1, Properties.PERSISTENT, Properties.WATERLOGGED);
			JUNGLE_LEAVES = Register(new .(scope .("minecraft:jungle_leaves"), 77, scope BlockSettings().Transparent()), Properties.DISTANCE_1, Properties.PERSISTENT, Properties.WATERLOGGED);
			ACACIA_LEAVES = Register(new .(scope .("minecraft:acacia_leaves"), 78, scope BlockSettings().Transparent()), Properties.DISTANCE_1, Properties.PERSISTENT, Properties.WATERLOGGED);
			DARK_OAK_LEAVES = Register(new .(scope .("minecraft:dark_oak_leaves"), 79, scope BlockSettings().Transparent()), Properties.DISTANCE_1, Properties.PERSISTENT, Properties.WATERLOGGED);
			MANGROVE_LEAVES = Register(new .(scope .("minecraft:mangrove_leaves"), 80, scope BlockSettings().Transparent()), Properties.DISTANCE_1, Properties.PERSISTENT, Properties.WATERLOGGED);
			AZALEA_LEAVES = Register(new .(scope .("minecraft:azalea_leaves"), 81, scope BlockSettings().Transparent()), Properties.DISTANCE_1, Properties.PERSISTENT, Properties.WATERLOGGED);
			FLOWERING_AZALEA_LEAVES = Register(new .(scope .("minecraft:flowering_azalea_leaves"), 82, scope BlockSettings().Transparent()), Properties.DISTANCE_1, Properties.PERSISTENT, Properties.WATERLOGGED);
			SPONGE = Register(new .(scope .("minecraft:sponge"), 83, scope BlockSettings()));
			WET_SPONGE = Register(new .(scope .("minecraft:wet_sponge"), 84, scope BlockSettings()));
			GLASS = Register(new .(scope .("minecraft:glass"), 85, scope BlockSettings().Transparent()));
			LAPIS_ORE = Register(new .(scope .("minecraft:lapis_ore"), 86, scope BlockSettings()));
			DEEPSLATE_LAPIS_ORE = Register(new .(scope .("minecraft:deepslate_lapis_ore"), 87, scope BlockSettings()));
			LAPIS_BLOCK = Register(new .(scope .("minecraft:lapis_block"), 88, scope BlockSettings()));
			DISPENSER = Register(new .(scope .("minecraft:dispenser"), 89, scope BlockSettings()), Properties.FACING_1, Properties.TRIGGERED);
			SANDSTONE = Register(new .(scope .("minecraft:sandstone"), 90, scope BlockSettings()));
			CHISELED_SANDSTONE = Register(new .(scope .("minecraft:chiseled_sandstone"), 91, scope BlockSettings()));
			CUT_SANDSTONE = Register(new .(scope .("minecraft:cut_sandstone"), 92, scope BlockSettings()));
			NOTE_BLOCK = Register(new .(scope .("minecraft:note_block"), 93, scope BlockSettings()), Properties.INSTRUMENT, Properties.POWERED, Properties.NOTE);
			WHITE_BED = Register(new .(scope .("minecraft:white_bed"), 94, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			ORANGE_BED = Register(new .(scope .("minecraft:orange_bed"), 95, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			MAGENTA_BED = Register(new .(scope .("minecraft:magenta_bed"), 96, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			LIGHT_BLUE_BED = Register(new .(scope .("minecraft:light_blue_bed"), 97, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			YELLOW_BED = Register(new .(scope .("minecraft:yellow_bed"), 98, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			LIME_BED = Register(new .(scope .("minecraft:lime_bed"), 99, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			PINK_BED = Register(new .(scope .("minecraft:pink_bed"), 100, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			GRAY_BED = Register(new .(scope .("minecraft:gray_bed"), 101, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			LIGHT_GRAY_BED = Register(new .(scope .("minecraft:light_gray_bed"), 102, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			CYAN_BED = Register(new .(scope .("minecraft:cyan_bed"), 103, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			PURPLE_BED = Register(new .(scope .("minecraft:purple_bed"), 104, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			BLUE_BED = Register(new .(scope .("minecraft:blue_bed"), 105, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			BROWN_BED = Register(new .(scope .("minecraft:brown_bed"), 106, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			GREEN_BED = Register(new .(scope .("minecraft:green_bed"), 107, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			RED_BED = Register(new .(scope .("minecraft:red_bed"), 108, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			BLACK_BED = Register(new .(scope .("minecraft:black_bed"), 109, scope BlockSettings()), Properties.FACING_2, Properties.PART, Properties.OCCUPIED);
			POWERED_RAIL = Register(new .(scope .("minecraft:powered_rail"), 110, scope BlockSettings().Transparent().NoCollision()), Properties.SHAPE_1, Properties.POWERED, Properties.WATERLOGGED);
			DETECTOR_RAIL = Register(new .(scope .("minecraft:detector_rail"), 111, scope BlockSettings().Transparent().NoCollision()), Properties.SHAPE_1, Properties.POWERED, Properties.WATERLOGGED);
			STICKY_PISTON = Register(new .(scope .("minecraft:sticky_piston"), 112, scope BlockSettings()), Properties.FACING_1, Properties.EXTENDED);
			COBWEB = Register(new .(scope .("minecraft:cobweb"), 113, scope BlockSettings().Transparent().NoCollision()));
			GRASS = Register(new .(scope .("minecraft:grass"), 114, scope BlockSettings().Transparent().NoCollision()));
			FERN = Register(new .(scope .("minecraft:fern"), 115, scope BlockSettings().Transparent().NoCollision()));
			DEAD_BUSH = Register(new .(scope .("minecraft:dead_bush"), 116, scope BlockSettings().Transparent().NoCollision()));
			SEAGRASS = Register(new .(scope .("minecraft:seagrass"), 117, scope BlockSettings().Transparent().NoCollision()));
			TALL_SEAGRASS = Register(new .(scope .("minecraft:tall_seagrass"), 118, scope BlockSettings().Transparent().NoCollision()), Properties.HALF_1);
			PISTON = Register(new .(scope .("minecraft:piston"), 119, scope BlockSettings()), Properties.FACING_1, Properties.EXTENDED);
			PISTON_HEAD = Register(new .(scope .("minecraft:piston_head"), 120, scope BlockSettings()), Properties.FACING_1, Properties.TYPE_1, Properties.SHORT);
			WHITE_WOOL = Register(new .(scope .("minecraft:white_wool"), 121, scope BlockSettings()));
			ORANGE_WOOL = Register(new .(scope .("minecraft:orange_wool"), 122, scope BlockSettings()));
			MAGENTA_WOOL = Register(new .(scope .("minecraft:magenta_wool"), 123, scope BlockSettings()));
			LIGHT_BLUE_WOOL = Register(new .(scope .("minecraft:light_blue_wool"), 124, scope BlockSettings()));
			YELLOW_WOOL = Register(new .(scope .("minecraft:yellow_wool"), 125, scope BlockSettings()));
			LIME_WOOL = Register(new .(scope .("minecraft:lime_wool"), 126, scope BlockSettings()));
			PINK_WOOL = Register(new .(scope .("minecraft:pink_wool"), 127, scope BlockSettings()));
			GRAY_WOOL = Register(new .(scope .("minecraft:gray_wool"), 128, scope BlockSettings()));
			LIGHT_GRAY_WOOL = Register(new .(scope .("minecraft:light_gray_wool"), 129, scope BlockSettings()));
			CYAN_WOOL = Register(new .(scope .("minecraft:cyan_wool"), 130, scope BlockSettings()));
			PURPLE_WOOL = Register(new .(scope .("minecraft:purple_wool"), 131, scope BlockSettings()));
			BLUE_WOOL = Register(new .(scope .("minecraft:blue_wool"), 132, scope BlockSettings()));
			BROWN_WOOL = Register(new .(scope .("minecraft:brown_wool"), 133, scope BlockSettings()));
			GREEN_WOOL = Register(new .(scope .("minecraft:green_wool"), 134, scope BlockSettings()));
			RED_WOOL = Register(new .(scope .("minecraft:red_wool"), 135, scope BlockSettings()));
			BLACK_WOOL = Register(new .(scope .("minecraft:black_wool"), 136, scope BlockSettings()));
			MOVING_PISTON = Register(new .(scope .("minecraft:moving_piston"), 137, scope BlockSettings()), Properties.FACING_1, Properties.TYPE_1);
			DANDELION = Register(new .(scope .("minecraft:dandelion"), 138, scope BlockSettings().Transparent().NoCollision()));
			POPPY = Register(new .(scope .("minecraft:poppy"), 139, scope BlockSettings().Transparent().NoCollision()));
			BLUE_ORCHID = Register(new .(scope .("minecraft:blue_orchid"), 140, scope BlockSettings().Transparent().NoCollision()));
			ALLIUM = Register(new .(scope .("minecraft:allium"), 141, scope BlockSettings().Transparent().NoCollision()));
			AZURE_BLUET = Register(new .(scope .("minecraft:azure_bluet"), 142, scope BlockSettings().Transparent().NoCollision()));
			RED_TULIP = Register(new .(scope .("minecraft:red_tulip"), 143, scope BlockSettings().Transparent().NoCollision()));
			ORANGE_TULIP = Register(new .(scope .("minecraft:orange_tulip"), 144, scope BlockSettings().Transparent().NoCollision()));
			WHITE_TULIP = Register(new .(scope .("minecraft:white_tulip"), 145, scope BlockSettings().Transparent().NoCollision()));
			PINK_TULIP = Register(new .(scope .("minecraft:pink_tulip"), 146, scope BlockSettings().Transparent().NoCollision()));
			OXEYE_DAISY = Register(new .(scope .("minecraft:oxeye_daisy"), 147, scope BlockSettings().Transparent().NoCollision()));
			CORNFLOWER = Register(new .(scope .("minecraft:cornflower"), 148, scope BlockSettings().Transparent().NoCollision()));
			WITHER_ROSE = Register(new .(scope .("minecraft:wither_rose"), 149, scope BlockSettings().Transparent().NoCollision()));
			LILY_OF_THE_VALLEY = Register(new .(scope .("minecraft:lily_of_the_valley"), 150, scope BlockSettings().Transparent().NoCollision()));
			BROWN_MUSHROOM = Register(new .(scope .("minecraft:brown_mushroom"), 151, scope BlockSettings().Transparent().NoCollision()));
			RED_MUSHROOM = Register(new .(scope .("minecraft:red_mushroom"), 152, scope BlockSettings().Transparent().NoCollision()));
			GOLD_BLOCK = Register(new .(scope .("minecraft:gold_block"), 153, scope BlockSettings()));
			IRON_BLOCK = Register(new .(scope .("minecraft:iron_block"), 154, scope BlockSettings()));
			BRICKS = Register(new .(scope .("minecraft:bricks"), 155, scope BlockSettings()));
			TNT = Register(new .(scope .("minecraft:tnt"), 156, scope BlockSettings().Transparent()), Properties.UNSTABLE);
			BOOKSHELF = Register(new .(scope .("minecraft:bookshelf"), 157, scope BlockSettings()));
			CHISELED_BOOKSHELF = Register(new .(scope .("minecraft:chiseled_bookshelf"), 158, scope BlockSettings()), Properties.FACING_2, Properties.SLOT_0_OCCUPIED, Properties.SLOT_1_OCCUPIED, Properties.SLOT_2_OCCUPIED, Properties.SLOT_3_OCCUPIED, Properties.SLOT_4_OCCUPIED, Properties.SLOT_5_OCCUPIED);
			MOSSY_COBBLESTONE = Register(new .(scope .("minecraft:mossy_cobblestone"), 159, scope BlockSettings()));
			OBSIDIAN = Register(new .(scope .("minecraft:obsidian"), 160, scope BlockSettings()));
			TORCH = Register(new .(scope .("minecraft:torch"), 161, scope BlockSettings().Transparent().NoCollision()));
			WALL_TORCH = Register(new .(scope .("minecraft:wall_torch"), 162, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2);
			FIRE = Register(new .(scope .("minecraft:fire"), 163, scope BlockSettings().Transparent().NoCollision()), Properties.AGE_2, Properties.NORTH_1, Properties.EAST_1, Properties.SOUTH_1, Properties.WEST_1, Properties.UP);
			SOUL_FIRE = Register(new .(scope .("minecraft:soul_fire"), 164, scope BlockSettings().Transparent().NoCollision()));
			SPAWNER = Register(new .(scope .("minecraft:spawner"), 165, scope BlockSettings()));
			OAK_STAIRS = Register(new .(scope .("minecraft:oak_stairs"), 166, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			CHEST = Register(new .(scope .("minecraft:chest"), 167, scope BlockSettings()), Properties.FACING_2, Properties.TYPE_2, Properties.WATERLOGGED);
			REDSTONE_WIRE = Register(new .(scope .("minecraft:redstone_wire"), 168, scope BlockSettings().Transparent().NoCollision()), Properties.NORTH_2, Properties.EAST_2, Properties.SOUTH_2, Properties.WEST_2, Properties.POWER);
			DIAMOND_ORE = Register(new .(scope .("minecraft:diamond_ore"), 169, scope BlockSettings()));
			DEEPSLATE_DIAMOND_ORE = Register(new .(scope .("minecraft:deepslate_diamond_ore"), 170, scope BlockSettings()));
			DIAMOND_BLOCK = Register(new .(scope .("minecraft:diamond_block"), 171, scope BlockSettings()));
			CRAFTING_TABLE = Register(new .(scope .("minecraft:crafting_table"), 172, scope BlockSettings()));
			WHEAT = Register(new .(scope .("minecraft:wheat"), 173, scope BlockSettings().Transparent().NoCollision()), Properties.AGE_3);
			FARMLAND = Register(new .(scope .("minecraft:farmland"), 174, scope BlockSettings()), Properties.MOISTURE);
			FURNACE = Register(new .(scope .("minecraft:furnace"), 175, scope BlockSettings()), Properties.FACING_2, Properties.LIT);
			OAK_SIGN = Register(new .(scope .("minecraft:oak_sign"), 176, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.WATERLOGGED);
			SPRUCE_SIGN = Register(new .(scope .("minecraft:spruce_sign"), 177, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.WATERLOGGED);
			BIRCH_SIGN = Register(new .(scope .("minecraft:birch_sign"), 178, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.WATERLOGGED);
			ACACIA_SIGN = Register(new .(scope .("minecraft:acacia_sign"), 179, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.WATERLOGGED);
			JUNGLE_SIGN = Register(new .(scope .("minecraft:jungle_sign"), 180, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.WATERLOGGED);
			DARK_OAK_SIGN = Register(new .(scope .("minecraft:dark_oak_sign"), 181, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.WATERLOGGED);
			MANGROVE_SIGN = Register(new .(scope .("minecraft:mangrove_sign"), 182, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.WATERLOGGED);
			BAMBOO_SIGN = Register(new .(scope .("minecraft:bamboo_sign"), 183, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.WATERLOGGED);
			OAK_DOOR = Register(new .(scope .("minecraft:oak_door"), 184, scope BlockSettings()), Properties.HALF_1, Properties.FACING_2, Properties.OPEN, Properties.HINGE, Properties.POWERED);
			LADDER = Register(new .(scope .("minecraft:ladder"), 185, scope BlockSettings().Transparent()), Properties.FACING_2, Properties.WATERLOGGED);
			RAIL = Register(new .(scope .("minecraft:rail"), 186, scope BlockSettings().Transparent().NoCollision()), Properties.SHAPE_3, Properties.WATERLOGGED);
			COBBLESTONE_STAIRS = Register(new .(scope .("minecraft:cobblestone_stairs"), 187, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			OAK_WALL_SIGN = Register(new .(scope .("minecraft:oak_wall_sign"), 188, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			SPRUCE_WALL_SIGN = Register(new .(scope .("minecraft:spruce_wall_sign"), 189, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			BIRCH_WALL_SIGN = Register(new .(scope .("minecraft:birch_wall_sign"), 190, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			ACACIA_WALL_SIGN = Register(new .(scope .("minecraft:acacia_wall_sign"), 191, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			JUNGLE_WALL_SIGN = Register(new .(scope .("minecraft:jungle_wall_sign"), 192, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			DARK_OAK_WALL_SIGN = Register(new .(scope .("minecraft:dark_oak_wall_sign"), 193, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			MANGROVE_WALL_SIGN = Register(new .(scope .("minecraft:mangrove_wall_sign"), 194, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			BAMBOO_WALL_SIGN = Register(new .(scope .("minecraft:bamboo_wall_sign"), 195, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			OAK_HANGING_SIGN = Register(new .(scope .("minecraft:oak_hanging_sign"), 196, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.ATTACHED, Properties.WATERLOGGED);
			SPRUCE_HANGING_SIGN = Register(new .(scope .("minecraft:spruce_hanging_sign"), 197, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.ATTACHED, Properties.WATERLOGGED);
			BIRCH_HANGING_SIGN = Register(new .(scope .("minecraft:birch_hanging_sign"), 198, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.ATTACHED, Properties.WATERLOGGED);
			ACACIA_HANGING_SIGN = Register(new .(scope .("minecraft:acacia_hanging_sign"), 199, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.ATTACHED, Properties.WATERLOGGED);
			JUNGLE_HANGING_SIGN = Register(new .(scope .("minecraft:jungle_hanging_sign"), 200, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.ATTACHED, Properties.WATERLOGGED);
			DARK_OAK_HANGING_SIGN = Register(new .(scope .("minecraft:dark_oak_hanging_sign"), 201, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.ATTACHED, Properties.WATERLOGGED);
			CRIMSON_HANGING_SIGN = Register(new .(scope .("minecraft:crimson_hanging_sign"), 202, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.ATTACHED, Properties.WATERLOGGED);
			WARPED_HANGING_SIGN = Register(new .(scope .("minecraft:warped_hanging_sign"), 203, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.ATTACHED, Properties.WATERLOGGED);
			MANGROVE_HANGING_SIGN = Register(new .(scope .("minecraft:mangrove_hanging_sign"), 204, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.ATTACHED, Properties.WATERLOGGED);
			BAMBOO_HANGING_SIGN = Register(new .(scope .("minecraft:bamboo_hanging_sign"), 205, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.ATTACHED, Properties.WATERLOGGED);
			OAK_WALL_HANGING_SIGN = Register(new .(scope .("minecraft:oak_wall_hanging_sign"), 206, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			SPRUCE_WALL_HANGING_SIGN = Register(new .(scope .("minecraft:spruce_wall_hanging_sign"), 207, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			BIRCH_WALL_HANGING_SIGN = Register(new .(scope .("minecraft:birch_wall_hanging_sign"), 208, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			ACACIA_WALL_HANGING_SIGN = Register(new .(scope .("minecraft:acacia_wall_hanging_sign"), 209, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			JUNGLE_WALL_HANGING_SIGN = Register(new .(scope .("minecraft:jungle_wall_hanging_sign"), 210, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			DARK_OAK_WALL_HANGING_SIGN = Register(new .(scope .("minecraft:dark_oak_wall_hanging_sign"), 211, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			MANGROVE_WALL_HANGING_SIGN = Register(new .(scope .("minecraft:mangrove_wall_hanging_sign"), 212, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			CRIMSON_WALL_HANGING_SIGN = Register(new .(scope .("minecraft:crimson_wall_hanging_sign"), 213, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			WARPED_WALL_HANGING_SIGN = Register(new .(scope .("minecraft:warped_wall_hanging_sign"), 214, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			BAMBOO_WALL_HANGING_SIGN = Register(new .(scope .("minecraft:bamboo_wall_hanging_sign"), 215, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			LEVER = Register(new .(scope .("minecraft:lever"), 216, scope BlockSettings().Transparent().NoCollision()), Properties.FACE, Properties.FACING_2, Properties.POWERED);
			STONE_PRESSURE_PLATE = Register(new .(scope .("minecraft:stone_pressure_plate"), 217, scope BlockSettings().NoCollision()), Properties.POWERED);
			IRON_DOOR = Register(new .(scope .("minecraft:iron_door"), 218, scope BlockSettings()), Properties.HALF_1, Properties.FACING_2, Properties.OPEN, Properties.HINGE, Properties.POWERED);
			OAK_PRESSURE_PLATE = Register(new .(scope .("minecraft:oak_pressure_plate"), 219, scope BlockSettings().NoCollision()), Properties.POWERED);
			SPRUCE_PRESSURE_PLATE = Register(new .(scope .("minecraft:spruce_pressure_plate"), 220, scope BlockSettings().NoCollision()), Properties.POWERED);
			BIRCH_PRESSURE_PLATE = Register(new .(scope .("minecraft:birch_pressure_plate"), 221, scope BlockSettings().NoCollision()), Properties.POWERED);
			JUNGLE_PRESSURE_PLATE = Register(new .(scope .("minecraft:jungle_pressure_plate"), 222, scope BlockSettings().NoCollision()), Properties.POWERED);
			ACACIA_PRESSURE_PLATE = Register(new .(scope .("minecraft:acacia_pressure_plate"), 223, scope BlockSettings().NoCollision()), Properties.POWERED);
			DARK_OAK_PRESSURE_PLATE = Register(new .(scope .("minecraft:dark_oak_pressure_plate"), 224, scope BlockSettings().NoCollision()), Properties.POWERED);
			MANGROVE_PRESSURE_PLATE = Register(new .(scope .("minecraft:mangrove_pressure_plate"), 225, scope BlockSettings().NoCollision()), Properties.POWERED);
			BAMBOO_PRESSURE_PLATE = Register(new .(scope .("minecraft:bamboo_pressure_plate"), 226, scope BlockSettings().NoCollision()), Properties.POWERED);
			REDSTONE_ORE = Register(new .(scope .("minecraft:redstone_ore"), 227, scope BlockSettings()), Properties.LIT);
			DEEPSLATE_REDSTONE_ORE = Register(new .(scope .("minecraft:deepslate_redstone_ore"), 228, scope BlockSettings()), Properties.LIT);
			REDSTONE_TORCH = Register(new .(scope .("minecraft:redstone_torch"), 229, scope BlockSettings().Transparent().NoCollision()), Properties.LIT);
			REDSTONE_WALL_TORCH = Register(new .(scope .("minecraft:redstone_wall_torch"), 230, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.LIT);
			STONE_BUTTON = Register(new .(scope .("minecraft:stone_button"), 231, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.POWERED, Properties.FACE);
			SNOW = Register(new .(scope .("minecraft:snow"), 232, scope BlockSettings().Transparent()), Properties.LAYERS);
			ICE = Register(new .(scope .("minecraft:ice"), 233, scope BlockSettings().Transparent()));
			SNOW_BLOCK = Register(new .(scope .("minecraft:snow_block"), 234, scope BlockSettings()));
			CACTUS = Register(new .(scope .("minecraft:cactus"), 235, scope BlockSettings().Transparent()), Properties.AGE_2);
			CLAY = Register(new .(scope .("minecraft:clay"), 236, scope BlockSettings()));
			SUGAR_CANE = Register(new .(scope .("minecraft:sugar_cane"), 237, scope BlockSettings().Transparent().NoCollision()), Properties.AGE_2);
			JUKEBOX = Register(new .(scope .("minecraft:jukebox"), 238, scope BlockSettings()), Properties.HAS_RECORD);
			OAK_FENCE = Register(new .(scope .("minecraft:oak_fence"), 239, scope BlockSettings()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			PUMPKIN = Register(new .(scope .("minecraft:pumpkin"), 240, scope BlockSettings()));
			NETHERRACK = Register(new .(scope .("minecraft:netherrack"), 241, scope BlockSettings()));
			SOUL_SAND = Register(new .(scope .("minecraft:soul_sand"), 242, scope BlockSettings()));
			SOUL_SOIL = Register(new .(scope .("minecraft:soul_soil"), 243, scope BlockSettings()));
			BASALT = Register(new .(scope .("minecraft:basalt"), 244, scope BlockSettings()), Properties.AXIS_1);
			POLISHED_BASALT = Register(new .(scope .("minecraft:polished_basalt"), 245, scope BlockSettings()), Properties.AXIS_1);
			SOUL_TORCH = Register(new .(scope .("minecraft:soul_torch"), 246, scope BlockSettings().Transparent().NoCollision()));
			SOUL_WALL_TORCH = Register(new .(scope .("minecraft:soul_wall_torch"), 247, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2);
			GLOWSTONE = Register(new .(scope .("minecraft:glowstone"), 248, scope BlockSettings().Transparent()));
			NETHER_PORTAL = Register(new .(scope .("minecraft:nether_portal"), 249, scope BlockSettings().Transparent().NoCollision()), Properties.AXIS_2);
			CARVED_PUMPKIN = Register(new .(scope .("minecraft:carved_pumpkin"), 250, scope BlockSettings()), Properties.FACING_2);
			JACK_O_LANTERN = Register(new .(scope .("minecraft:jack_o_lantern"), 251, scope BlockSettings()), Properties.FACING_2);
			CAKE = Register(new .(scope .("minecraft:cake"), 252, scope BlockSettings()), Properties.BITES);
			REPEATER = Register(new .(scope .("minecraft:repeater"), 253, scope BlockSettings().Transparent()), Properties.FACING_2, Properties.DELAY, Properties.LOCKED, Properties.POWERED);
			WHITE_STAINED_GLASS = Register(new .(scope .("minecraft:white_stained_glass"), 254, scope BlockSettings().Transparent()));
			ORANGE_STAINED_GLASS = Register(new .(scope .("minecraft:orange_stained_glass"), 255, scope BlockSettings().Transparent()));
			MAGENTA_STAINED_GLASS = Register(new .(scope .("minecraft:magenta_stained_glass"), 256, scope BlockSettings().Transparent()));
			LIGHT_BLUE_STAINED_GLASS = Register(new .(scope .("minecraft:light_blue_stained_glass"), 257, scope BlockSettings().Transparent()));
			YELLOW_STAINED_GLASS = Register(new .(scope .("minecraft:yellow_stained_glass"), 258, scope BlockSettings().Transparent()));
			LIME_STAINED_GLASS = Register(new .(scope .("minecraft:lime_stained_glass"), 259, scope BlockSettings().Transparent()));
			PINK_STAINED_GLASS = Register(new .(scope .("minecraft:pink_stained_glass"), 260, scope BlockSettings().Transparent()));
			GRAY_STAINED_GLASS = Register(new .(scope .("minecraft:gray_stained_glass"), 261, scope BlockSettings().Transparent()));
			LIGHT_GRAY_STAINED_GLASS = Register(new .(scope .("minecraft:light_gray_stained_glass"), 262, scope BlockSettings().Transparent()));
			CYAN_STAINED_GLASS = Register(new .(scope .("minecraft:cyan_stained_glass"), 263, scope BlockSettings().Transparent()));
			PURPLE_STAINED_GLASS = Register(new .(scope .("minecraft:purple_stained_glass"), 264, scope BlockSettings().Transparent()));
			BLUE_STAINED_GLASS = Register(new .(scope .("minecraft:blue_stained_glass"), 265, scope BlockSettings().Transparent()));
			BROWN_STAINED_GLASS = Register(new .(scope .("minecraft:brown_stained_glass"), 266, scope BlockSettings().Transparent()));
			GREEN_STAINED_GLASS = Register(new .(scope .("minecraft:green_stained_glass"), 267, scope BlockSettings().Transparent()));
			RED_STAINED_GLASS = Register(new .(scope .("minecraft:red_stained_glass"), 268, scope BlockSettings().Transparent()));
			BLACK_STAINED_GLASS = Register(new .(scope .("minecraft:black_stained_glass"), 269, scope BlockSettings().Transparent()));
			OAK_TRAPDOOR = Register(new .(scope .("minecraft:oak_trapdoor"), 270, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.HALF_2, Properties.POWERED, Properties.WATERLOGGED);
			SPRUCE_TRAPDOOR = Register(new .(scope .("minecraft:spruce_trapdoor"), 271, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.HALF_2, Properties.POWERED, Properties.WATERLOGGED);
			BIRCH_TRAPDOOR = Register(new .(scope .("minecraft:birch_trapdoor"), 272, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.HALF_2, Properties.POWERED, Properties.WATERLOGGED);
			JUNGLE_TRAPDOOR = Register(new .(scope .("minecraft:jungle_trapdoor"), 273, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.HALF_2, Properties.POWERED, Properties.WATERLOGGED);
			ACACIA_TRAPDOOR = Register(new .(scope .("minecraft:acacia_trapdoor"), 274, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.HALF_2, Properties.POWERED, Properties.WATERLOGGED);
			DARK_OAK_TRAPDOOR = Register(new .(scope .("minecraft:dark_oak_trapdoor"), 275, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.HALF_2, Properties.POWERED, Properties.WATERLOGGED);
			MANGROVE_TRAPDOOR = Register(new .(scope .("minecraft:mangrove_trapdoor"), 276, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.HALF_2, Properties.POWERED, Properties.WATERLOGGED);
			BAMBOO_TRAPDOOR = Register(new .(scope .("minecraft:bamboo_trapdoor"), 277, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.HALF_2, Properties.POWERED, Properties.WATERLOGGED);
			STONE_BRICKS = Register(new .(scope .("minecraft:stone_bricks"), 278, scope BlockSettings()));
			MOSSY_STONE_BRICKS = Register(new .(scope .("minecraft:mossy_stone_bricks"), 279, scope BlockSettings()));
			CRACKED_STONE_BRICKS = Register(new .(scope .("minecraft:cracked_stone_bricks"), 280, scope BlockSettings()));
			CHISELED_STONE_BRICKS = Register(new .(scope .("minecraft:chiseled_stone_bricks"), 281, scope BlockSettings()));
			PACKED_MUD = Register(new .(scope .("minecraft:packed_mud"), 282, scope BlockSettings()));
			MUD_BRICKS = Register(new .(scope .("minecraft:mud_bricks"), 283, scope BlockSettings()));
			INFESTED_STONE = Register(new .(scope .("minecraft:infested_stone"), 284, scope BlockSettings()));
			INFESTED_COBBLESTONE = Register(new .(scope .("minecraft:infested_cobblestone"), 285, scope BlockSettings()));
			INFESTED_STONE_BRICKS = Register(new .(scope .("minecraft:infested_stone_bricks"), 286, scope BlockSettings()));
			INFESTED_MOSSY_STONE_BRICKS = Register(new .(scope .("minecraft:infested_mossy_stone_bricks"), 287, scope BlockSettings()));
			INFESTED_CRACKED_STONE_BRICKS = Register(new .(scope .("minecraft:infested_cracked_stone_bricks"), 288, scope BlockSettings()));
			INFESTED_CHISELED_STONE_BRICKS = Register(new .(scope .("minecraft:infested_chiseled_stone_bricks"), 289, scope BlockSettings()));
			BROWN_MUSHROOM_BLOCK = Register(new .(scope .("minecraft:brown_mushroom_block"), 290, scope BlockSettings()), Properties.UP, Properties.DOWN, Properties.NORTH_1, Properties.EAST_1, Properties.SOUTH_1, Properties.WEST_1);
			RED_MUSHROOM_BLOCK = Register(new .(scope .("minecraft:red_mushroom_block"), 291, scope BlockSettings()), Properties.UP, Properties.DOWN, Properties.NORTH_1, Properties.EAST_1, Properties.SOUTH_1, Properties.WEST_1);
			MUSHROOM_STEM = Register(new .(scope .("minecraft:mushroom_stem"), 292, scope BlockSettings()), Properties.UP, Properties.DOWN, Properties.NORTH_1, Properties.EAST_1, Properties.SOUTH_1, Properties.WEST_1);
			IRON_BARS = Register(new .(scope .("minecraft:iron_bars"), 293, scope BlockSettings()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			CHAIN = Register(new .(scope .("minecraft:chain"), 294, scope BlockSettings()), Properties.WATERLOGGED, Properties.AXIS_1);
			GLASS_PANE = Register(new .(scope .("minecraft:glass_pane"), 295, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			MELON = Register(new .(scope .("minecraft:melon"), 296, scope BlockSettings()));
			ATTACHED_PUMPKIN_STEM = Register(new .(scope .("minecraft:attached_pumpkin_stem"), 297, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2);
			ATTACHED_MELON_STEM = Register(new .(scope .("minecraft:attached_melon_stem"), 298, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2);
			PUMPKIN_STEM = Register(new .(scope .("minecraft:pumpkin_stem"), 299, scope BlockSettings().Transparent().NoCollision()), Properties.AGE_3);
			MELON_STEM = Register(new .(scope .("minecraft:melon_stem"), 300, scope BlockSettings().Transparent().NoCollision()), Properties.AGE_3);
			VINE = Register(new .(scope .("minecraft:vine"), 301, scope BlockSettings().Transparent().NoCollision()), Properties.UP, Properties.NORTH_1, Properties.EAST_1, Properties.SOUTH_1, Properties.WEST_1);
			GLOW_LICHEN = Register(new .(scope .("minecraft:glow_lichen"), 302, scope BlockSettings().Transparent().NoCollision()), Properties.DOWN, Properties.UP, Properties.NORTH_1, Properties.SOUTH_1, Properties.WEST_1, Properties.EAST_1, Properties.WATERLOGGED);
			OAK_FENCE_GATE = Register(new .(scope .("minecraft:oak_fence_gate"), 303, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.POWERED, Properties.IN_WALL);
			BRICK_STAIRS = Register(new .(scope .("minecraft:brick_stairs"), 304, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			STONE_BRICK_STAIRS = Register(new .(scope .("minecraft:stone_brick_stairs"), 305, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			MUD_BRICK_STAIRS = Register(new .(scope .("minecraft:mud_brick_stairs"), 306, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			MYCELIUM = Register(new .(scope .("minecraft:mycelium"), 307, scope BlockSettings()), Properties.SNOWY);
			LILY_PAD = Register(new .(scope .("minecraft:lily_pad"), 308, scope BlockSettings().Transparent()));
			NETHER_BRICKS = Register(new .(scope .("minecraft:nether_bricks"), 309, scope BlockSettings()));
			NETHER_BRICK_FENCE = Register(new .(scope .("minecraft:nether_brick_fence"), 310, scope BlockSettings()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			NETHER_BRICK_STAIRS = Register(new .(scope .("minecraft:nether_brick_stairs"), 311, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			NETHER_WART = Register(new .(scope .("minecraft:nether_wart"), 312, scope BlockSettings().Transparent().NoCollision()), Properties.AGE_4);
			ENCHANTING_TABLE = Register(new .(scope .("minecraft:enchanting_table"), 313, scope BlockSettings()));
			BREWING_STAND = Register(new .(scope .("minecraft:brewing_stand"), 314, scope BlockSettings()), Properties.HAS_BOTTLE_0, Properties.HAS_BOTTLE_1, Properties.HAS_BOTTLE_2);
			CAULDRON = Register(new .(scope .("minecraft:cauldron"), 315, scope BlockSettings()));
			WATER_CAULDRON = Register(new .(scope .("minecraft:water_cauldron"), 316, scope BlockSettings()), Properties.LEVEL_2);
			LAVA_CAULDRON = Register(new .(scope .("minecraft:lava_cauldron"), 317, scope BlockSettings()));
			POWDER_SNOW_CAULDRON = Register(new .(scope .("minecraft:powder_snow_cauldron"), 318, scope BlockSettings()), Properties.LEVEL_2);
			END_PORTAL = Register(new .(scope .("minecraft:end_portal"), 319, scope BlockSettings().Transparent().NoCollision()));
			END_PORTAL_FRAME = Register(new .(scope .("minecraft:end_portal_frame"), 320, scope BlockSettings()), Properties.FACING_2, Properties.EYE);
			END_STONE = Register(new .(scope .("minecraft:end_stone"), 321, scope BlockSettings()));
			DRAGON_EGG = Register(new .(scope .("minecraft:dragon_egg"), 322, scope BlockSettings()));
			REDSTONE_LAMP = Register(new .(scope .("minecraft:redstone_lamp"), 323, scope BlockSettings()), Properties.LIT);
			COCOA = Register(new .(scope .("minecraft:cocoa"), 324, scope BlockSettings().Transparent()), Properties.FACING_2, Properties.AGE_5);
			SANDSTONE_STAIRS = Register(new .(scope .("minecraft:sandstone_stairs"), 325, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			EMERALD_ORE = Register(new .(scope .("minecraft:emerald_ore"), 326, scope BlockSettings()));
			DEEPSLATE_EMERALD_ORE = Register(new .(scope .("minecraft:deepslate_emerald_ore"), 327, scope BlockSettings()));
			ENDER_CHEST = Register(new .(scope .("minecraft:ender_chest"), 328, scope BlockSettings()), Properties.FACING_2, Properties.WATERLOGGED);
			TRIPWIRE_HOOK = Register(new .(scope .("minecraft:tripwire_hook"), 329, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.POWERED, Properties.ATTACHED);
			TRIPWIRE = Register(new .(scope .("minecraft:tripwire"), 330, scope BlockSettings().Transparent().NoCollision()), Properties.POWERED, Properties.ATTACHED, Properties.DISARMED, Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1);
			EMERALD_BLOCK = Register(new .(scope .("minecraft:emerald_block"), 331, scope BlockSettings()));
			SPRUCE_STAIRS = Register(new .(scope .("minecraft:spruce_stairs"), 332, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			BIRCH_STAIRS = Register(new .(scope .("minecraft:birch_stairs"), 333, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			JUNGLE_STAIRS = Register(new .(scope .("minecraft:jungle_stairs"), 334, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			COMMAND_BLOCK = Register(new .(scope .("minecraft:command_block"), 335, scope BlockSettings()), Properties.FACING_1, Properties.CONDITIONAL);
			BEACON = Register(new .(scope .("minecraft:beacon"), 336, scope BlockSettings().Transparent()));
			COBBLESTONE_WALL = Register(new .(scope .("minecraft:cobblestone_wall"), 337, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			MOSSY_COBBLESTONE_WALL = Register(new .(scope .("minecraft:mossy_cobblestone_wall"), 338, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			FLOWER_POT = Register(new .(scope .("minecraft:flower_pot"), 339, scope BlockSettings().Transparent()));
			POTTED_OAK_SAPLING = Register(new .(scope .("minecraft:potted_oak_sapling"), 340, scope BlockSettings().Transparent()));
			POTTED_SPRUCE_SAPLING = Register(new .(scope .("minecraft:potted_spruce_sapling"), 341, scope BlockSettings().Transparent()));
			POTTED_BIRCH_SAPLING = Register(new .(scope .("minecraft:potted_birch_sapling"), 342, scope BlockSettings().Transparent()));
			POTTED_JUNGLE_SAPLING = Register(new .(scope .("minecraft:potted_jungle_sapling"), 343, scope BlockSettings().Transparent()));
			POTTED_ACACIA_SAPLING = Register(new .(scope .("minecraft:potted_acacia_sapling"), 344, scope BlockSettings().Transparent()));
			POTTED_DARK_OAK_SAPLING = Register(new .(scope .("minecraft:potted_dark_oak_sapling"), 345, scope BlockSettings().Transparent()));
			POTTED_MANGROVE_PROPAGULE = Register(new .(scope .("minecraft:potted_mangrove_propagule"), 346, scope BlockSettings().Transparent()));
			POTTED_FERN = Register(new .(scope .("minecraft:potted_fern"), 347, scope BlockSettings().Transparent()));
			POTTED_DANDELION = Register(new .(scope .("minecraft:potted_dandelion"), 348, scope BlockSettings().Transparent()));
			POTTED_POPPY = Register(new .(scope .("minecraft:potted_poppy"), 349, scope BlockSettings().Transparent()));
			POTTED_BLUE_ORCHID = Register(new .(scope .("minecraft:potted_blue_orchid"), 350, scope BlockSettings().Transparent()));
			POTTED_ALLIUM = Register(new .(scope .("minecraft:potted_allium"), 351, scope BlockSettings().Transparent()));
			POTTED_AZURE_BLUET = Register(new .(scope .("minecraft:potted_azure_bluet"), 352, scope BlockSettings().Transparent()));
			POTTED_RED_TULIP = Register(new .(scope .("minecraft:potted_red_tulip"), 353, scope BlockSettings().Transparent()));
			POTTED_ORANGE_TULIP = Register(new .(scope .("minecraft:potted_orange_tulip"), 354, scope BlockSettings().Transparent()));
			POTTED_WHITE_TULIP = Register(new .(scope .("minecraft:potted_white_tulip"), 355, scope BlockSettings().Transparent()));
			POTTED_PINK_TULIP = Register(new .(scope .("minecraft:potted_pink_tulip"), 356, scope BlockSettings().Transparent()));
			POTTED_OXEYE_DAISY = Register(new .(scope .("minecraft:potted_oxeye_daisy"), 357, scope BlockSettings().Transparent()));
			POTTED_CORNFLOWER = Register(new .(scope .("minecraft:potted_cornflower"), 358, scope BlockSettings().Transparent()));
			POTTED_LILY_OF_THE_VALLEY = Register(new .(scope .("minecraft:potted_lily_of_the_valley"), 359, scope BlockSettings().Transparent()));
			POTTED_WITHER_ROSE = Register(new .(scope .("minecraft:potted_wither_rose"), 360, scope BlockSettings().Transparent()));
			POTTED_RED_MUSHROOM = Register(new .(scope .("minecraft:potted_red_mushroom"), 361, scope BlockSettings().Transparent()));
			POTTED_BROWN_MUSHROOM = Register(new .(scope .("minecraft:potted_brown_mushroom"), 362, scope BlockSettings().Transparent()));
			POTTED_DEAD_BUSH = Register(new .(scope .("minecraft:potted_dead_bush"), 363, scope BlockSettings().Transparent()));
			POTTED_CACTUS = Register(new .(scope .("minecraft:potted_cactus"), 364, scope BlockSettings().Transparent()));
			CARROTS = Register(new .(scope .("minecraft:carrots"), 365, scope BlockSettings().Transparent().NoCollision()), Properties.AGE_3);
			POTATOES = Register(new .(scope .("minecraft:potatoes"), 366, scope BlockSettings().Transparent().NoCollision()), Properties.AGE_3);
			OAK_BUTTON = Register(new .(scope .("minecraft:oak_button"), 367, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.POWERED, Properties.FACE);
			SPRUCE_BUTTON = Register(new .(scope .("minecraft:spruce_button"), 368, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.POWERED, Properties.FACE);
			BIRCH_BUTTON = Register(new .(scope .("minecraft:birch_button"), 369, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.POWERED, Properties.FACE);
			JUNGLE_BUTTON = Register(new .(scope .("minecraft:jungle_button"), 370, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.POWERED, Properties.FACE);
			ACACIA_BUTTON = Register(new .(scope .("minecraft:acacia_button"), 371, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.POWERED, Properties.FACE);
			DARK_OAK_BUTTON = Register(new .(scope .("minecraft:dark_oak_button"), 372, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.POWERED, Properties.FACE);
			MANGROVE_BUTTON = Register(new .(scope .("minecraft:mangrove_button"), 373, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.POWERED, Properties.FACE);
			BAMBOO_BUTTON = Register(new .(scope .("minecraft:bamboo_button"), 374, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.POWERED, Properties.FACE);
			SKELETON_SKULL = Register(new .(scope .("minecraft:skeleton_skull"), 375, scope BlockSettings().Transparent()), Properties.ROTATION);
			SKELETON_WALL_SKULL = Register(new .(scope .("minecraft:skeleton_wall_skull"), 376, scope BlockSettings().Transparent()), Properties.FACING_2);
			WITHER_SKELETON_SKULL = Register(new .(scope .("minecraft:wither_skeleton_skull"), 377, scope BlockSettings().Transparent()), Properties.ROTATION);
			WITHER_SKELETON_WALL_SKULL = Register(new .(scope .("minecraft:wither_skeleton_wall_skull"), 378, scope BlockSettings().Transparent()), Properties.FACING_2);
			ZOMBIE_HEAD = Register(new .(scope .("minecraft:zombie_head"), 379, scope BlockSettings().Transparent()), Properties.ROTATION);
			ZOMBIE_WALL_HEAD = Register(new .(scope .("minecraft:zombie_wall_head"), 380, scope BlockSettings().Transparent()), Properties.FACING_2);
			PLAYER_HEAD = Register(new .(scope .("minecraft:player_head"), 381, scope BlockSettings().Transparent()), Properties.ROTATION);
			PLAYER_WALL_HEAD = Register(new .(scope .("minecraft:player_wall_head"), 382, scope BlockSettings().Transparent()), Properties.FACING_2);
			CREEPER_HEAD = Register(new .(scope .("minecraft:creeper_head"), 383, scope BlockSettings().Transparent()), Properties.ROTATION);
			CREEPER_WALL_HEAD = Register(new .(scope .("minecraft:creeper_wall_head"), 384, scope BlockSettings().Transparent()), Properties.FACING_2);
			DRAGON_HEAD = Register(new .(scope .("minecraft:dragon_head"), 385, scope BlockSettings().Transparent()), Properties.ROTATION);
			DRAGON_WALL_HEAD = Register(new .(scope .("minecraft:dragon_wall_head"), 386, scope BlockSettings().Transparent()), Properties.FACING_2);
			PIGLIN_HEAD = Register(new .(scope .("minecraft:piglin_head"), 387, scope BlockSettings().Transparent()), Properties.ROTATION);
			PIGLIN_WALL_HEAD = Register(new .(scope .("minecraft:piglin_wall_head"), 388, scope BlockSettings().Transparent()), Properties.FACING_2);
			ANVIL = Register(new .(scope .("minecraft:anvil"), 389, scope BlockSettings()), Properties.FACING_2);
			CHIPPED_ANVIL = Register(new .(scope .("minecraft:chipped_anvil"), 390, scope BlockSettings()), Properties.FACING_2);
			DAMAGED_ANVIL = Register(new .(scope .("minecraft:damaged_anvil"), 391, scope BlockSettings()), Properties.FACING_2);
			TRAPPED_CHEST = Register(new .(scope .("minecraft:trapped_chest"), 392, scope BlockSettings()), Properties.FACING_2, Properties.TYPE_2, Properties.WATERLOGGED);
			LIGHT_WEIGHTED_PRESSURE_PLATE = Register(new .(scope .("minecraft:light_weighted_pressure_plate"), 393, scope BlockSettings().NoCollision()), Properties.POWER);
			HEAVY_WEIGHTED_PRESSURE_PLATE = Register(new .(scope .("minecraft:heavy_weighted_pressure_plate"), 394, scope BlockSettings().NoCollision()), Properties.POWER);
			COMPARATOR = Register(new .(scope .("minecraft:comparator"), 395, scope BlockSettings().Transparent()), Properties.FACING_2, Properties.MODE_1, Properties.POWERED);
			DAYLIGHT_DETECTOR = Register(new .(scope .("minecraft:daylight_detector"), 396, scope BlockSettings()), Properties.POWER, Properties.INVERTED);
			REDSTONE_BLOCK = Register(new .(scope .("minecraft:redstone_block"), 397, scope BlockSettings()));
			NETHER_QUARTZ_ORE = Register(new .(scope .("minecraft:nether_quartz_ore"), 398, scope BlockSettings()));
			HOPPER = Register(new .(scope .("minecraft:hopper"), 399, scope BlockSettings()), Properties.FACING_3, Properties.ENABLED);
			QUARTZ_BLOCK = Register(new .(scope .("minecraft:quartz_block"), 400, scope BlockSettings()));
			CHISELED_QUARTZ_BLOCK = Register(new .(scope .("minecraft:chiseled_quartz_block"), 401, scope BlockSettings()));
			QUARTZ_PILLAR = Register(new .(scope .("minecraft:quartz_pillar"), 402, scope BlockSettings()), Properties.AXIS_1);
			QUARTZ_STAIRS = Register(new .(scope .("minecraft:quartz_stairs"), 403, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			ACTIVATOR_RAIL = Register(new .(scope .("minecraft:activator_rail"), 404, scope BlockSettings().Transparent().NoCollision()), Properties.SHAPE_1, Properties.POWERED, Properties.WATERLOGGED);
			DROPPER = Register(new .(scope .("minecraft:dropper"), 405, scope BlockSettings()), Properties.FACING_1, Properties.TRIGGERED);
			WHITE_TERRACOTTA = Register(new .(scope .("minecraft:white_terracotta"), 406, scope BlockSettings()));
			ORANGE_TERRACOTTA = Register(new .(scope .("minecraft:orange_terracotta"), 407, scope BlockSettings()));
			MAGENTA_TERRACOTTA = Register(new .(scope .("minecraft:magenta_terracotta"), 408, scope BlockSettings()));
			LIGHT_BLUE_TERRACOTTA = Register(new .(scope .("minecraft:light_blue_terracotta"), 409, scope BlockSettings()));
			YELLOW_TERRACOTTA = Register(new .(scope .("minecraft:yellow_terracotta"), 410, scope BlockSettings()));
			LIME_TERRACOTTA = Register(new .(scope .("minecraft:lime_terracotta"), 411, scope BlockSettings()));
			PINK_TERRACOTTA = Register(new .(scope .("minecraft:pink_terracotta"), 412, scope BlockSettings()));
			GRAY_TERRACOTTA = Register(new .(scope .("minecraft:gray_terracotta"), 413, scope BlockSettings()));
			LIGHT_GRAY_TERRACOTTA = Register(new .(scope .("minecraft:light_gray_terracotta"), 414, scope BlockSettings()));
			CYAN_TERRACOTTA = Register(new .(scope .("minecraft:cyan_terracotta"), 415, scope BlockSettings()));
			PURPLE_TERRACOTTA = Register(new .(scope .("minecraft:purple_terracotta"), 416, scope BlockSettings()));
			BLUE_TERRACOTTA = Register(new .(scope .("minecraft:blue_terracotta"), 417, scope BlockSettings()));
			BROWN_TERRACOTTA = Register(new .(scope .("minecraft:brown_terracotta"), 418, scope BlockSettings()));
			GREEN_TERRACOTTA = Register(new .(scope .("minecraft:green_terracotta"), 419, scope BlockSettings()));
			RED_TERRACOTTA = Register(new .(scope .("minecraft:red_terracotta"), 420, scope BlockSettings()));
			BLACK_TERRACOTTA = Register(new .(scope .("minecraft:black_terracotta"), 421, scope BlockSettings()));
			WHITE_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:white_stained_glass_pane"), 422, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			ORANGE_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:orange_stained_glass_pane"), 423, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			MAGENTA_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:magenta_stained_glass_pane"), 424, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			LIGHT_BLUE_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:light_blue_stained_glass_pane"), 425, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			YELLOW_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:yellow_stained_glass_pane"), 426, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			LIME_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:lime_stained_glass_pane"), 427, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			PINK_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:pink_stained_glass_pane"), 428, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			GRAY_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:gray_stained_glass_pane"), 429, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			LIGHT_GRAY_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:light_gray_stained_glass_pane"), 430, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			CYAN_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:cyan_stained_glass_pane"), 431, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			PURPLE_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:purple_stained_glass_pane"), 432, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			BLUE_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:blue_stained_glass_pane"), 433, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			BROWN_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:brown_stained_glass_pane"), 434, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			GREEN_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:green_stained_glass_pane"), 435, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			RED_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:red_stained_glass_pane"), 436, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			BLACK_STAINED_GLASS_PANE = Register(new .(scope .("minecraft:black_stained_glass_pane"), 437, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			ACACIA_STAIRS = Register(new .(scope .("minecraft:acacia_stairs"), 438, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			DARK_OAK_STAIRS = Register(new .(scope .("minecraft:dark_oak_stairs"), 439, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			MANGROVE_STAIRS = Register(new .(scope .("minecraft:mangrove_stairs"), 440, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			BAMBOO_STAIRS = Register(new .(scope .("minecraft:bamboo_stairs"), 441, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			BAMBOO_MOSAIC_STAIRS = Register(new .(scope .("minecraft:bamboo_mosaic_stairs"), 442, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			SLIME_BLOCK = Register(new .(scope .("minecraft:slime_block"), 443, scope BlockSettings()));
			BARRIER = Register(new .(scope .("minecraft:barrier"), 444, scope BlockSettings()));
			LIGHT = Register(new .(scope .("minecraft:light"), 445, scope BlockSettings().Transparent()), Properties.LEVEL_1, Properties.WATERLOGGED);
			IRON_TRAPDOOR = Register(new .(scope .("minecraft:iron_trapdoor"), 446, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.HALF_2, Properties.POWERED, Properties.WATERLOGGED);
			PRISMARINE = Register(new .(scope .("minecraft:prismarine"), 447, scope BlockSettings()));
			PRISMARINE_BRICKS = Register(new .(scope .("minecraft:prismarine_bricks"), 448, scope BlockSettings()));
			DARK_PRISMARINE = Register(new .(scope .("minecraft:dark_prismarine"), 449, scope BlockSettings()));
			PRISMARINE_STAIRS = Register(new .(scope .("minecraft:prismarine_stairs"), 450, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			PRISMARINE_BRICK_STAIRS = Register(new .(scope .("minecraft:prismarine_brick_stairs"), 451, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			DARK_PRISMARINE_STAIRS = Register(new .(scope .("minecraft:dark_prismarine_stairs"), 452, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			PRISMARINE_SLAB = Register(new .(scope .("minecraft:prismarine_slab"), 453, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			PRISMARINE_BRICK_SLAB = Register(new .(scope .("minecraft:prismarine_brick_slab"), 454, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			DARK_PRISMARINE_SLAB = Register(new .(scope .("minecraft:dark_prismarine_slab"), 455, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			SEA_LANTERN = Register(new .(scope .("minecraft:sea_lantern"), 456, scope BlockSettings().Transparent()));
			HAY_BLOCK = Register(new .(scope .("minecraft:hay_block"), 457, scope BlockSettings()), Properties.AXIS_1);
			WHITE_CARPET = Register(new .(scope .("minecraft:white_carpet"), 458, scope BlockSettings().Transparent()));
			ORANGE_CARPET = Register(new .(scope .("minecraft:orange_carpet"), 459, scope BlockSettings().Transparent()));
			MAGENTA_CARPET = Register(new .(scope .("minecraft:magenta_carpet"), 460, scope BlockSettings().Transparent()));
			LIGHT_BLUE_CARPET = Register(new .(scope .("minecraft:light_blue_carpet"), 461, scope BlockSettings().Transparent()));
			YELLOW_CARPET = Register(new .(scope .("minecraft:yellow_carpet"), 462, scope BlockSettings().Transparent()));
			LIME_CARPET = Register(new .(scope .("minecraft:lime_carpet"), 463, scope BlockSettings().Transparent()));
			PINK_CARPET = Register(new .(scope .("minecraft:pink_carpet"), 464, scope BlockSettings().Transparent()));
			GRAY_CARPET = Register(new .(scope .("minecraft:gray_carpet"), 465, scope BlockSettings().Transparent()));
			LIGHT_GRAY_CARPET = Register(new .(scope .("minecraft:light_gray_carpet"), 466, scope BlockSettings().Transparent()));
			CYAN_CARPET = Register(new .(scope .("minecraft:cyan_carpet"), 467, scope BlockSettings().Transparent()));
			PURPLE_CARPET = Register(new .(scope .("minecraft:purple_carpet"), 468, scope BlockSettings().Transparent()));
			BLUE_CARPET = Register(new .(scope .("minecraft:blue_carpet"), 469, scope BlockSettings().Transparent()));
			BROWN_CARPET = Register(new .(scope .("minecraft:brown_carpet"), 470, scope BlockSettings().Transparent()));
			GREEN_CARPET = Register(new .(scope .("minecraft:green_carpet"), 471, scope BlockSettings().Transparent()));
			RED_CARPET = Register(new .(scope .("minecraft:red_carpet"), 472, scope BlockSettings().Transparent()));
			BLACK_CARPET = Register(new .(scope .("minecraft:black_carpet"), 473, scope BlockSettings().Transparent()));
			TERRACOTTA = Register(new .(scope .("minecraft:terracotta"), 474, scope BlockSettings()));
			COAL_BLOCK = Register(new .(scope .("minecraft:coal_block"), 475, scope BlockSettings()));
			PACKED_ICE = Register(new .(scope .("minecraft:packed_ice"), 476, scope BlockSettings()));
			SUNFLOWER = Register(new .(scope .("minecraft:sunflower"), 477, scope BlockSettings().Transparent().NoCollision()), Properties.HALF_1);
			LILAC = Register(new .(scope .("minecraft:lilac"), 478, scope BlockSettings().Transparent().NoCollision()), Properties.HALF_1);
			ROSE_BUSH = Register(new .(scope .("minecraft:rose_bush"), 479, scope BlockSettings().Transparent().NoCollision()), Properties.HALF_1);
			PEONY = Register(new .(scope .("minecraft:peony"), 480, scope BlockSettings().Transparent().NoCollision()), Properties.HALF_1);
			TALL_GRASS = Register(new .(scope .("minecraft:tall_grass"), 481, scope BlockSettings().Transparent().NoCollision()), Properties.HALF_1);
			LARGE_FERN = Register(new .(scope .("minecraft:large_fern"), 482, scope BlockSettings().Transparent().NoCollision()), Properties.HALF_1);
			WHITE_BANNER = Register(new .(scope .("minecraft:white_banner"), 483, scope BlockSettings().NoCollision()), Properties.ROTATION);
			ORANGE_BANNER = Register(new .(scope .("minecraft:orange_banner"), 484, scope BlockSettings().NoCollision()), Properties.ROTATION);
			MAGENTA_BANNER = Register(new .(scope .("minecraft:magenta_banner"), 485, scope BlockSettings().NoCollision()), Properties.ROTATION);
			LIGHT_BLUE_BANNER = Register(new .(scope .("minecraft:light_blue_banner"), 486, scope BlockSettings().NoCollision()), Properties.ROTATION);
			YELLOW_BANNER = Register(new .(scope .("minecraft:yellow_banner"), 487, scope BlockSettings().NoCollision()), Properties.ROTATION);
			LIME_BANNER = Register(new .(scope .("minecraft:lime_banner"), 488, scope BlockSettings().NoCollision()), Properties.ROTATION);
			PINK_BANNER = Register(new .(scope .("minecraft:pink_banner"), 489, scope BlockSettings().NoCollision()), Properties.ROTATION);
			GRAY_BANNER = Register(new .(scope .("minecraft:gray_banner"), 490, scope BlockSettings().NoCollision()), Properties.ROTATION);
			LIGHT_GRAY_BANNER = Register(new .(scope .("minecraft:light_gray_banner"), 491, scope BlockSettings().NoCollision()), Properties.ROTATION);
			CYAN_BANNER = Register(new .(scope .("minecraft:cyan_banner"), 492, scope BlockSettings().NoCollision()), Properties.ROTATION);
			PURPLE_BANNER = Register(new .(scope .("minecraft:purple_banner"), 493, scope BlockSettings().NoCollision()), Properties.ROTATION);
			BLUE_BANNER = Register(new .(scope .("minecraft:blue_banner"), 494, scope BlockSettings().NoCollision()), Properties.ROTATION);
			BROWN_BANNER = Register(new .(scope .("minecraft:brown_banner"), 495, scope BlockSettings().NoCollision()), Properties.ROTATION);
			GREEN_BANNER = Register(new .(scope .("minecraft:green_banner"), 496, scope BlockSettings().NoCollision()), Properties.ROTATION);
			RED_BANNER = Register(new .(scope .("minecraft:red_banner"), 497, scope BlockSettings().NoCollision()), Properties.ROTATION);
			BLACK_BANNER = Register(new .(scope .("minecraft:black_banner"), 498, scope BlockSettings().NoCollision()), Properties.ROTATION);
			WHITE_WALL_BANNER = Register(new .(scope .("minecraft:white_wall_banner"), 499, scope BlockSettings().NoCollision()), Properties.FACING_2);
			ORANGE_WALL_BANNER = Register(new .(scope .("minecraft:orange_wall_banner"), 500, scope BlockSettings().NoCollision()), Properties.FACING_2);
			MAGENTA_WALL_BANNER = Register(new .(scope .("minecraft:magenta_wall_banner"), 501, scope BlockSettings().NoCollision()), Properties.FACING_2);
			LIGHT_BLUE_WALL_BANNER = Register(new .(scope .("minecraft:light_blue_wall_banner"), 502, scope BlockSettings().NoCollision()), Properties.FACING_2);
			YELLOW_WALL_BANNER = Register(new .(scope .("minecraft:yellow_wall_banner"), 503, scope BlockSettings().NoCollision()), Properties.FACING_2);
			LIME_WALL_BANNER = Register(new .(scope .("minecraft:lime_wall_banner"), 504, scope BlockSettings().NoCollision()), Properties.FACING_2);
			PINK_WALL_BANNER = Register(new .(scope .("minecraft:pink_wall_banner"), 505, scope BlockSettings().NoCollision()), Properties.FACING_2);
			GRAY_WALL_BANNER = Register(new .(scope .("minecraft:gray_wall_banner"), 506, scope BlockSettings().NoCollision()), Properties.FACING_2);
			LIGHT_GRAY_WALL_BANNER = Register(new .(scope .("minecraft:light_gray_wall_banner"), 507, scope BlockSettings().NoCollision()), Properties.FACING_2);
			CYAN_WALL_BANNER = Register(new .(scope .("minecraft:cyan_wall_banner"), 508, scope BlockSettings().NoCollision()), Properties.FACING_2);
			PURPLE_WALL_BANNER = Register(new .(scope .("minecraft:purple_wall_banner"), 509, scope BlockSettings().NoCollision()), Properties.FACING_2);
			BLUE_WALL_BANNER = Register(new .(scope .("minecraft:blue_wall_banner"), 510, scope BlockSettings().NoCollision()), Properties.FACING_2);
			BROWN_WALL_BANNER = Register(new .(scope .("minecraft:brown_wall_banner"), 511, scope BlockSettings().NoCollision()), Properties.FACING_2);
			GREEN_WALL_BANNER = Register(new .(scope .("minecraft:green_wall_banner"), 512, scope BlockSettings().NoCollision()), Properties.FACING_2);
			RED_WALL_BANNER = Register(new .(scope .("minecraft:red_wall_banner"), 513, scope BlockSettings().NoCollision()), Properties.FACING_2);
			BLACK_WALL_BANNER = Register(new .(scope .("minecraft:black_wall_banner"), 514, scope BlockSettings().NoCollision()), Properties.FACING_2);
			RED_SANDSTONE = Register(new .(scope .("minecraft:red_sandstone"), 515, scope BlockSettings()));
			CHISELED_RED_SANDSTONE = Register(new .(scope .("minecraft:chiseled_red_sandstone"), 516, scope BlockSettings()));
			CUT_RED_SANDSTONE = Register(new .(scope .("minecraft:cut_red_sandstone"), 517, scope BlockSettings()));
			RED_SANDSTONE_STAIRS = Register(new .(scope .("minecraft:red_sandstone_stairs"), 518, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			OAK_SLAB = Register(new .(scope .("minecraft:oak_slab"), 519, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			SPRUCE_SLAB = Register(new .(scope .("minecraft:spruce_slab"), 520, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			BIRCH_SLAB = Register(new .(scope .("minecraft:birch_slab"), 521, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			JUNGLE_SLAB = Register(new .(scope .("minecraft:jungle_slab"), 522, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			ACACIA_SLAB = Register(new .(scope .("minecraft:acacia_slab"), 523, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			DARK_OAK_SLAB = Register(new .(scope .("minecraft:dark_oak_slab"), 524, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			MANGROVE_SLAB = Register(new .(scope .("minecraft:mangrove_slab"), 525, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			BAMBOO_SLAB = Register(new .(scope .("minecraft:bamboo_slab"), 526, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			BAMBOO_MOSAIC_SLAB = Register(new .(scope .("minecraft:bamboo_mosaic_slab"), 527, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			STONE_SLAB = Register(new .(scope .("minecraft:stone_slab"), 528, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			SMOOTH_STONE_SLAB = Register(new .(scope .("minecraft:smooth_stone_slab"), 529, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			SANDSTONE_SLAB = Register(new .(scope .("minecraft:sandstone_slab"), 530, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			CUT_SANDSTONE_SLAB = Register(new .(scope .("minecraft:cut_sandstone_slab"), 531, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			PETRIFIED_OAK_SLAB = Register(new .(scope .("minecraft:petrified_oak_slab"), 532, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			COBBLESTONE_SLAB = Register(new .(scope .("minecraft:cobblestone_slab"), 533, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			BRICK_SLAB = Register(new .(scope .("minecraft:brick_slab"), 534, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			STONE_BRICK_SLAB = Register(new .(scope .("minecraft:stone_brick_slab"), 535, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			MUD_BRICK_SLAB = Register(new .(scope .("minecraft:mud_brick_slab"), 536, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			NETHER_BRICK_SLAB = Register(new .(scope .("minecraft:nether_brick_slab"), 537, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			QUARTZ_SLAB = Register(new .(scope .("minecraft:quartz_slab"), 538, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			RED_SANDSTONE_SLAB = Register(new .(scope .("minecraft:red_sandstone_slab"), 539, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			CUT_RED_SANDSTONE_SLAB = Register(new .(scope .("minecraft:cut_red_sandstone_slab"), 540, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			PURPUR_SLAB = Register(new .(scope .("minecraft:purpur_slab"), 541, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			SMOOTH_STONE = Register(new .(scope .("minecraft:smooth_stone"), 542, scope BlockSettings()));
			SMOOTH_SANDSTONE = Register(new .(scope .("minecraft:smooth_sandstone"), 543, scope BlockSettings()));
			SMOOTH_QUARTZ = Register(new .(scope .("minecraft:smooth_quartz"), 544, scope BlockSettings()));
			SMOOTH_RED_SANDSTONE = Register(new .(scope .("minecraft:smooth_red_sandstone"), 545, scope BlockSettings()));
			SPRUCE_FENCE_GATE = Register(new .(scope .("minecraft:spruce_fence_gate"), 546, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.POWERED, Properties.IN_WALL);
			BIRCH_FENCE_GATE = Register(new .(scope .("minecraft:birch_fence_gate"), 547, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.POWERED, Properties.IN_WALL);
			JUNGLE_FENCE_GATE = Register(new .(scope .("minecraft:jungle_fence_gate"), 548, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.POWERED, Properties.IN_WALL);
			ACACIA_FENCE_GATE = Register(new .(scope .("minecraft:acacia_fence_gate"), 549, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.POWERED, Properties.IN_WALL);
			DARK_OAK_FENCE_GATE = Register(new .(scope .("minecraft:dark_oak_fence_gate"), 550, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.POWERED, Properties.IN_WALL);
			MANGROVE_FENCE_GATE = Register(new .(scope .("minecraft:mangrove_fence_gate"), 551, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.POWERED, Properties.IN_WALL);
			BAMBOO_FENCE_GATE = Register(new .(scope .("minecraft:bamboo_fence_gate"), 552, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.POWERED, Properties.IN_WALL);
			SPRUCE_FENCE = Register(new .(scope .("minecraft:spruce_fence"), 553, scope BlockSettings()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			BIRCH_FENCE = Register(new .(scope .("minecraft:birch_fence"), 554, scope BlockSettings()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			JUNGLE_FENCE = Register(new .(scope .("minecraft:jungle_fence"), 555, scope BlockSettings()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			ACACIA_FENCE = Register(new .(scope .("minecraft:acacia_fence"), 556, scope BlockSettings()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			DARK_OAK_FENCE = Register(new .(scope .("minecraft:dark_oak_fence"), 557, scope BlockSettings()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			MANGROVE_FENCE = Register(new .(scope .("minecraft:mangrove_fence"), 558, scope BlockSettings()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			BAMBOO_FENCE = Register(new .(scope .("minecraft:bamboo_fence"), 559, scope BlockSettings()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			SPRUCE_DOOR = Register(new .(scope .("minecraft:spruce_door"), 560, scope BlockSettings()), Properties.HALF_1, Properties.FACING_2, Properties.OPEN, Properties.HINGE, Properties.POWERED);
			BIRCH_DOOR = Register(new .(scope .("minecraft:birch_door"), 561, scope BlockSettings()), Properties.HALF_1, Properties.FACING_2, Properties.OPEN, Properties.HINGE, Properties.POWERED);
			JUNGLE_DOOR = Register(new .(scope .("minecraft:jungle_door"), 562, scope BlockSettings()), Properties.HALF_1, Properties.FACING_2, Properties.OPEN, Properties.HINGE, Properties.POWERED);
			ACACIA_DOOR = Register(new .(scope .("minecraft:acacia_door"), 563, scope BlockSettings()), Properties.HALF_1, Properties.FACING_2, Properties.OPEN, Properties.HINGE, Properties.POWERED);
			DARK_OAK_DOOR = Register(new .(scope .("minecraft:dark_oak_door"), 564, scope BlockSettings()), Properties.HALF_1, Properties.FACING_2, Properties.OPEN, Properties.HINGE, Properties.POWERED);
			MANGROVE_DOOR = Register(new .(scope .("minecraft:mangrove_door"), 565, scope BlockSettings()), Properties.HALF_1, Properties.FACING_2, Properties.OPEN, Properties.HINGE, Properties.POWERED);
			BAMBOO_DOOR = Register(new .(scope .("minecraft:bamboo_door"), 566, scope BlockSettings()), Properties.HALF_1, Properties.FACING_2, Properties.OPEN, Properties.HINGE, Properties.POWERED);
			END_ROD = Register(new .(scope .("minecraft:end_rod"), 567, scope BlockSettings().Transparent()), Properties.FACING_1);
			CHORUS_PLANT = Register(new .(scope .("minecraft:chorus_plant"), 568, scope BlockSettings().Transparent()), Properties.NORTH_1, Properties.EAST_1, Properties.SOUTH_1, Properties.WEST_1, Properties.UP, Properties.DOWN);
			CHORUS_FLOWER = Register(new .(scope .("minecraft:chorus_flower"), 569, scope BlockSettings().Transparent()), Properties.AGE_6);
			PURPUR_BLOCK = Register(new .(scope .("minecraft:purpur_block"), 570, scope BlockSettings()));
			PURPUR_PILLAR = Register(new .(scope .("minecraft:purpur_pillar"), 571, scope BlockSettings()), Properties.AXIS_1);
			PURPUR_STAIRS = Register(new .(scope .("minecraft:purpur_stairs"), 572, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			END_STONE_BRICKS = Register(new .(scope .("minecraft:end_stone_bricks"), 573, scope BlockSettings()));
			BEETROOTS = Register(new .(scope .("minecraft:beetroots"), 574, scope BlockSettings().Transparent().NoCollision()), Properties.AGE_4);
			DIRT_PATH = Register(new .(scope .("minecraft:dirt_path"), 575, scope BlockSettings()));
			END_GATEWAY = Register(new .(scope .("minecraft:end_gateway"), 576, scope BlockSettings().Transparent().NoCollision()));
			REPEATING_COMMAND_BLOCK = Register(new .(scope .("minecraft:repeating_command_block"), 577, scope BlockSettings()), Properties.FACING_1, Properties.CONDITIONAL);
			CHAIN_COMMAND_BLOCK = Register(new .(scope .("minecraft:chain_command_block"), 578, scope BlockSettings()), Properties.FACING_1, Properties.CONDITIONAL);
			FROSTED_ICE = Register(new .(scope .("minecraft:frosted_ice"), 579, scope BlockSettings().Transparent()), Properties.AGE_4);
			MAGMA_BLOCK = Register(new .(scope .("minecraft:magma_block"), 580, scope BlockSettings()));
			NETHER_WART_BLOCK = Register(new .(scope .("minecraft:nether_wart_block"), 581, scope BlockSettings()));
			RED_NETHER_BRICKS = Register(new .(scope .("minecraft:red_nether_bricks"), 582, scope BlockSettings()));
			BONE_BLOCK = Register(new .(scope .("minecraft:bone_block"), 583, scope BlockSettings()), Properties.AXIS_1);
			STRUCTURE_VOID = Register(new .(scope .("minecraft:structure_void"), 584, scope BlockSettings().Transparent().NoCollision()));
			OBSERVER = Register(new .(scope .("minecraft:observer"), 585, scope BlockSettings()), Properties.FACING_1, Properties.POWERED);
			SHULKER_BOX = Register(new .(scope .("minecraft:shulker_box"), 586, scope BlockSettings()), Properties.FACING_1);
			WHITE_SHULKER_BOX = Register(new .(scope .("minecraft:white_shulker_box"), 587, scope BlockSettings()), Properties.FACING_1);
			ORANGE_SHULKER_BOX = Register(new .(scope .("minecraft:orange_shulker_box"), 588, scope BlockSettings()), Properties.FACING_1);
			MAGENTA_SHULKER_BOX = Register(new .(scope .("minecraft:magenta_shulker_box"), 589, scope BlockSettings()), Properties.FACING_1);
			LIGHT_BLUE_SHULKER_BOX = Register(new .(scope .("minecraft:light_blue_shulker_box"), 590, scope BlockSettings()), Properties.FACING_1);
			YELLOW_SHULKER_BOX = Register(new .(scope .("minecraft:yellow_shulker_box"), 591, scope BlockSettings()), Properties.FACING_1);
			LIME_SHULKER_BOX = Register(new .(scope .("minecraft:lime_shulker_box"), 592, scope BlockSettings()), Properties.FACING_1);
			PINK_SHULKER_BOX = Register(new .(scope .("minecraft:pink_shulker_box"), 593, scope BlockSettings()), Properties.FACING_1);
			GRAY_SHULKER_BOX = Register(new .(scope .("minecraft:gray_shulker_box"), 594, scope BlockSettings()), Properties.FACING_1);
			LIGHT_GRAY_SHULKER_BOX = Register(new .(scope .("minecraft:light_gray_shulker_box"), 595, scope BlockSettings()), Properties.FACING_1);
			CYAN_SHULKER_BOX = Register(new .(scope .("minecraft:cyan_shulker_box"), 596, scope BlockSettings()), Properties.FACING_1);
			PURPLE_SHULKER_BOX = Register(new .(scope .("minecraft:purple_shulker_box"), 597, scope BlockSettings()), Properties.FACING_1);
			BLUE_SHULKER_BOX = Register(new .(scope .("minecraft:blue_shulker_box"), 598, scope BlockSettings()), Properties.FACING_1);
			BROWN_SHULKER_BOX = Register(new .(scope .("minecraft:brown_shulker_box"), 599, scope BlockSettings()), Properties.FACING_1);
			GREEN_SHULKER_BOX = Register(new .(scope .("minecraft:green_shulker_box"), 600, scope BlockSettings()), Properties.FACING_1);
			RED_SHULKER_BOX = Register(new .(scope .("minecraft:red_shulker_box"), 601, scope BlockSettings()), Properties.FACING_1);
			BLACK_SHULKER_BOX = Register(new .(scope .("minecraft:black_shulker_box"), 602, scope BlockSettings()), Properties.FACING_1);
			WHITE_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:white_glazed_terracotta"), 603, scope BlockSettings()), Properties.FACING_2);
			ORANGE_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:orange_glazed_terracotta"), 604, scope BlockSettings()), Properties.FACING_2);
			MAGENTA_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:magenta_glazed_terracotta"), 605, scope BlockSettings()), Properties.FACING_2);
			LIGHT_BLUE_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:light_blue_glazed_terracotta"), 606, scope BlockSettings()), Properties.FACING_2);
			YELLOW_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:yellow_glazed_terracotta"), 607, scope BlockSettings()), Properties.FACING_2);
			LIME_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:lime_glazed_terracotta"), 608, scope BlockSettings()), Properties.FACING_2);
			PINK_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:pink_glazed_terracotta"), 609, scope BlockSettings()), Properties.FACING_2);
			GRAY_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:gray_glazed_terracotta"), 610, scope BlockSettings()), Properties.FACING_2);
			LIGHT_GRAY_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:light_gray_glazed_terracotta"), 611, scope BlockSettings()), Properties.FACING_2);
			CYAN_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:cyan_glazed_terracotta"), 612, scope BlockSettings()), Properties.FACING_2);
			PURPLE_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:purple_glazed_terracotta"), 613, scope BlockSettings()), Properties.FACING_2);
			BLUE_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:blue_glazed_terracotta"), 614, scope BlockSettings()), Properties.FACING_2);
			BROWN_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:brown_glazed_terracotta"), 615, scope BlockSettings()), Properties.FACING_2);
			GREEN_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:green_glazed_terracotta"), 616, scope BlockSettings()), Properties.FACING_2);
			RED_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:red_glazed_terracotta"), 617, scope BlockSettings()), Properties.FACING_2);
			BLACK_GLAZED_TERRACOTTA = Register(new .(scope .("minecraft:black_glazed_terracotta"), 618, scope BlockSettings()), Properties.FACING_2);
			WHITE_CONCRETE = Register(new .(scope .("minecraft:white_concrete"), 619, scope BlockSettings()));
			ORANGE_CONCRETE = Register(new .(scope .("minecraft:orange_concrete"), 620, scope BlockSettings()));
			MAGENTA_CONCRETE = Register(new .(scope .("minecraft:magenta_concrete"), 621, scope BlockSettings()));
			LIGHT_BLUE_CONCRETE = Register(new .(scope .("minecraft:light_blue_concrete"), 622, scope BlockSettings()));
			YELLOW_CONCRETE = Register(new .(scope .("minecraft:yellow_concrete"), 623, scope BlockSettings()));
			LIME_CONCRETE = Register(new .(scope .("minecraft:lime_concrete"), 624, scope BlockSettings()));
			PINK_CONCRETE = Register(new .(scope .("minecraft:pink_concrete"), 625, scope BlockSettings()));
			GRAY_CONCRETE = Register(new .(scope .("minecraft:gray_concrete"), 626, scope BlockSettings()));
			LIGHT_GRAY_CONCRETE = Register(new .(scope .("minecraft:light_gray_concrete"), 627, scope BlockSettings()));
			CYAN_CONCRETE = Register(new .(scope .("minecraft:cyan_concrete"), 628, scope BlockSettings()));
			PURPLE_CONCRETE = Register(new .(scope .("minecraft:purple_concrete"), 629, scope BlockSettings()));
			BLUE_CONCRETE = Register(new .(scope .("minecraft:blue_concrete"), 630, scope BlockSettings()));
			BROWN_CONCRETE = Register(new .(scope .("minecraft:brown_concrete"), 631, scope BlockSettings()));
			GREEN_CONCRETE = Register(new .(scope .("minecraft:green_concrete"), 632, scope BlockSettings()));
			RED_CONCRETE = Register(new .(scope .("minecraft:red_concrete"), 633, scope BlockSettings()));
			BLACK_CONCRETE = Register(new .(scope .("minecraft:black_concrete"), 634, scope BlockSettings()));
			WHITE_CONCRETE_POWDER = Register(new .(scope .("minecraft:white_concrete_powder"), 635, scope BlockSettings()));
			ORANGE_CONCRETE_POWDER = Register(new .(scope .("minecraft:orange_concrete_powder"), 636, scope BlockSettings()));
			MAGENTA_CONCRETE_POWDER = Register(new .(scope .("minecraft:magenta_concrete_powder"), 637, scope BlockSettings()));
			LIGHT_BLUE_CONCRETE_POWDER = Register(new .(scope .("minecraft:light_blue_concrete_powder"), 638, scope BlockSettings()));
			YELLOW_CONCRETE_POWDER = Register(new .(scope .("minecraft:yellow_concrete_powder"), 639, scope BlockSettings()));
			LIME_CONCRETE_POWDER = Register(new .(scope .("minecraft:lime_concrete_powder"), 640, scope BlockSettings()));
			PINK_CONCRETE_POWDER = Register(new .(scope .("minecraft:pink_concrete_powder"), 641, scope BlockSettings()));
			GRAY_CONCRETE_POWDER = Register(new .(scope .("minecraft:gray_concrete_powder"), 642, scope BlockSettings()));
			LIGHT_GRAY_CONCRETE_POWDER = Register(new .(scope .("minecraft:light_gray_concrete_powder"), 643, scope BlockSettings()));
			CYAN_CONCRETE_POWDER = Register(new .(scope .("minecraft:cyan_concrete_powder"), 644, scope BlockSettings()));
			PURPLE_CONCRETE_POWDER = Register(new .(scope .("minecraft:purple_concrete_powder"), 645, scope BlockSettings()));
			BLUE_CONCRETE_POWDER = Register(new .(scope .("minecraft:blue_concrete_powder"), 646, scope BlockSettings()));
			BROWN_CONCRETE_POWDER = Register(new .(scope .("minecraft:brown_concrete_powder"), 647, scope BlockSettings()));
			GREEN_CONCRETE_POWDER = Register(new .(scope .("minecraft:green_concrete_powder"), 648, scope BlockSettings()));
			RED_CONCRETE_POWDER = Register(new .(scope .("minecraft:red_concrete_powder"), 649, scope BlockSettings()));
			BLACK_CONCRETE_POWDER = Register(new .(scope .("minecraft:black_concrete_powder"), 650, scope BlockSettings()));
			KELP = Register(new .(scope .("minecraft:kelp"), 651, scope BlockSettings().Transparent().NoCollision()), Properties.AGE_7);
			KELP_PLANT = Register(new .(scope .("minecraft:kelp_plant"), 652, scope BlockSettings().Transparent().NoCollision()));
			DRIED_KELP_BLOCK = Register(new .(scope .("minecraft:dried_kelp_block"), 653, scope BlockSettings()));
			TURTLE_EGG = Register(new .(scope .("minecraft:turtle_egg"), 654, scope BlockSettings()), Properties.HATCH, Properties.EGGS);
			DEAD_TUBE_CORAL_BLOCK = Register(new .(scope .("minecraft:dead_tube_coral_block"), 655, scope BlockSettings()));
			DEAD_BRAIN_CORAL_BLOCK = Register(new .(scope .("minecraft:dead_brain_coral_block"), 656, scope BlockSettings()));
			DEAD_BUBBLE_CORAL_BLOCK = Register(new .(scope .("minecraft:dead_bubble_coral_block"), 657, scope BlockSettings()));
			DEAD_FIRE_CORAL_BLOCK = Register(new .(scope .("minecraft:dead_fire_coral_block"), 658, scope BlockSettings()));
			DEAD_HORN_CORAL_BLOCK = Register(new .(scope .("minecraft:dead_horn_coral_block"), 659, scope BlockSettings()));
			TUBE_CORAL_BLOCK = Register(new .(scope .("minecraft:tube_coral_block"), 660, scope BlockSettings()));
			BRAIN_CORAL_BLOCK = Register(new .(scope .("minecraft:brain_coral_block"), 661, scope BlockSettings()));
			BUBBLE_CORAL_BLOCK = Register(new .(scope .("minecraft:bubble_coral_block"), 662, scope BlockSettings()));
			FIRE_CORAL_BLOCK = Register(new .(scope .("minecraft:fire_coral_block"), 663, scope BlockSettings()));
			HORN_CORAL_BLOCK = Register(new .(scope .("minecraft:horn_coral_block"), 664, scope BlockSettings()));
			DEAD_TUBE_CORAL = Register(new .(scope .("minecraft:dead_tube_coral"), 665, scope BlockSettings().NoCollision()), Properties.WATERLOGGED);
			DEAD_BRAIN_CORAL = Register(new .(scope .("minecraft:dead_brain_coral"), 666, scope BlockSettings().NoCollision()), Properties.WATERLOGGED);
			DEAD_BUBBLE_CORAL = Register(new .(scope .("minecraft:dead_bubble_coral"), 667, scope BlockSettings().NoCollision()), Properties.WATERLOGGED);
			DEAD_FIRE_CORAL = Register(new .(scope .("minecraft:dead_fire_coral"), 668, scope BlockSettings().NoCollision()), Properties.WATERLOGGED);
			DEAD_HORN_CORAL = Register(new .(scope .("minecraft:dead_horn_coral"), 669, scope BlockSettings().NoCollision()), Properties.WATERLOGGED);
			TUBE_CORAL = Register(new .(scope .("minecraft:tube_coral"), 670, scope BlockSettings().Transparent().NoCollision()), Properties.WATERLOGGED);
			BRAIN_CORAL = Register(new .(scope .("minecraft:brain_coral"), 671, scope BlockSettings().Transparent().NoCollision()), Properties.WATERLOGGED);
			BUBBLE_CORAL = Register(new .(scope .("minecraft:bubble_coral"), 672, scope BlockSettings().Transparent().NoCollision()), Properties.WATERLOGGED);
			FIRE_CORAL = Register(new .(scope .("minecraft:fire_coral"), 673, scope BlockSettings().Transparent().NoCollision()), Properties.WATERLOGGED);
			HORN_CORAL = Register(new .(scope .("minecraft:horn_coral"), 674, scope BlockSettings().Transparent().NoCollision()), Properties.WATERLOGGED);
			DEAD_TUBE_CORAL_FAN = Register(new .(scope .("minecraft:dead_tube_coral_fan"), 675, scope BlockSettings().NoCollision()), Properties.WATERLOGGED);
			DEAD_BRAIN_CORAL_FAN = Register(new .(scope .("minecraft:dead_brain_coral_fan"), 676, scope BlockSettings().NoCollision()), Properties.WATERLOGGED);
			DEAD_BUBBLE_CORAL_FAN = Register(new .(scope .("minecraft:dead_bubble_coral_fan"), 677, scope BlockSettings().NoCollision()), Properties.WATERLOGGED);
			DEAD_FIRE_CORAL_FAN = Register(new .(scope .("minecraft:dead_fire_coral_fan"), 678, scope BlockSettings().NoCollision()), Properties.WATERLOGGED);
			DEAD_HORN_CORAL_FAN = Register(new .(scope .("minecraft:dead_horn_coral_fan"), 679, scope BlockSettings().NoCollision()), Properties.WATERLOGGED);
			TUBE_CORAL_FAN = Register(new .(scope .("minecraft:tube_coral_fan"), 680, scope BlockSettings().Transparent().NoCollision()), Properties.WATERLOGGED);
			BRAIN_CORAL_FAN = Register(new .(scope .("minecraft:brain_coral_fan"), 681, scope BlockSettings().Transparent().NoCollision()), Properties.WATERLOGGED);
			BUBBLE_CORAL_FAN = Register(new .(scope .("minecraft:bubble_coral_fan"), 682, scope BlockSettings().Transparent().NoCollision()), Properties.WATERLOGGED);
			FIRE_CORAL_FAN = Register(new .(scope .("minecraft:fire_coral_fan"), 683, scope BlockSettings().Transparent().NoCollision()), Properties.WATERLOGGED);
			HORN_CORAL_FAN = Register(new .(scope .("minecraft:horn_coral_fan"), 684, scope BlockSettings().Transparent().NoCollision()), Properties.WATERLOGGED);
			DEAD_TUBE_CORAL_WALL_FAN = Register(new .(scope .("minecraft:dead_tube_coral_wall_fan"), 685, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			DEAD_BRAIN_CORAL_WALL_FAN = Register(new .(scope .("minecraft:dead_brain_coral_wall_fan"), 686, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			DEAD_BUBBLE_CORAL_WALL_FAN = Register(new .(scope .("minecraft:dead_bubble_coral_wall_fan"), 687, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			DEAD_FIRE_CORAL_WALL_FAN = Register(new .(scope .("minecraft:dead_fire_coral_wall_fan"), 688, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			DEAD_HORN_CORAL_WALL_FAN = Register(new .(scope .("minecraft:dead_horn_coral_wall_fan"), 689, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			TUBE_CORAL_WALL_FAN = Register(new .(scope .("minecraft:tube_coral_wall_fan"), 690, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			BRAIN_CORAL_WALL_FAN = Register(new .(scope .("minecraft:brain_coral_wall_fan"), 691, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			BUBBLE_CORAL_WALL_FAN = Register(new .(scope .("minecraft:bubble_coral_wall_fan"), 692, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			FIRE_CORAL_WALL_FAN = Register(new .(scope .("minecraft:fire_coral_wall_fan"), 693, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			HORN_CORAL_WALL_FAN = Register(new .(scope .("minecraft:horn_coral_wall_fan"), 694, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			SEA_PICKLE = Register(new .(scope .("minecraft:sea_pickle"), 695, scope BlockSettings().Transparent()), Properties.PICKLES, Properties.WATERLOGGED);
			BLUE_ICE = Register(new .(scope .("minecraft:blue_ice"), 696, scope BlockSettings()));
			CONDUIT = Register(new .(scope .("minecraft:conduit"), 697, scope BlockSettings().Transparent()), Properties.WATERLOGGED);
			BAMBOO_SAPLING = Register(new .(scope .("minecraft:bamboo_sapling"), 698, scope BlockSettings().NoCollision()));
			BAMBOO = Register(new .(scope .("minecraft:bamboo"), 699, scope BlockSettings()), Properties.AGE_8, Properties.LEAVES, Properties.STAGE);
			POTTED_BAMBOO = Register(new .(scope .("minecraft:potted_bamboo"), 700, scope BlockSettings().Transparent()));
			VOID_AIR = Register(new .(scope .("minecraft:void_air"), 701, scope BlockSettings().Transparent().NoCollision()));
			CAVE_AIR = Register(new .(scope .("minecraft:cave_air"), 702, scope BlockSettings().Transparent().NoCollision()));
			BUBBLE_COLUMN = Register(new .(scope .("minecraft:bubble_column"), 703, scope BlockSettings().Transparent().NoCollision()), Properties.DRAG);
			POLISHED_GRANITE_STAIRS = Register(new .(scope .("minecraft:polished_granite_stairs"), 704, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			SMOOTH_RED_SANDSTONE_STAIRS = Register(new .(scope .("minecraft:smooth_red_sandstone_stairs"), 705, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			MOSSY_STONE_BRICK_STAIRS = Register(new .(scope .("minecraft:mossy_stone_brick_stairs"), 706, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			POLISHED_DIORITE_STAIRS = Register(new .(scope .("minecraft:polished_diorite_stairs"), 707, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			MOSSY_COBBLESTONE_STAIRS = Register(new .(scope .("minecraft:mossy_cobblestone_stairs"), 708, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			END_STONE_BRICK_STAIRS = Register(new .(scope .("minecraft:end_stone_brick_stairs"), 709, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			STONE_STAIRS = Register(new .(scope .("minecraft:stone_stairs"), 710, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			SMOOTH_SANDSTONE_STAIRS = Register(new .(scope .("minecraft:smooth_sandstone_stairs"), 711, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			SMOOTH_QUARTZ_STAIRS = Register(new .(scope .("minecraft:smooth_quartz_stairs"), 712, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			GRANITE_STAIRS = Register(new .(scope .("minecraft:granite_stairs"), 713, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			ANDESITE_STAIRS = Register(new .(scope .("minecraft:andesite_stairs"), 714, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			RED_NETHER_BRICK_STAIRS = Register(new .(scope .("minecraft:red_nether_brick_stairs"), 715, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			POLISHED_ANDESITE_STAIRS = Register(new .(scope .("minecraft:polished_andesite_stairs"), 716, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			DIORITE_STAIRS = Register(new .(scope .("minecraft:diorite_stairs"), 717, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			POLISHED_GRANITE_SLAB = Register(new .(scope .("minecraft:polished_granite_slab"), 718, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			SMOOTH_RED_SANDSTONE_SLAB = Register(new .(scope .("minecraft:smooth_red_sandstone_slab"), 719, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			MOSSY_STONE_BRICK_SLAB = Register(new .(scope .("minecraft:mossy_stone_brick_slab"), 720, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			POLISHED_DIORITE_SLAB = Register(new .(scope .("minecraft:polished_diorite_slab"), 721, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			MOSSY_COBBLESTONE_SLAB = Register(new .(scope .("minecraft:mossy_cobblestone_slab"), 722, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			END_STONE_BRICK_SLAB = Register(new .(scope .("minecraft:end_stone_brick_slab"), 723, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			SMOOTH_SANDSTONE_SLAB = Register(new .(scope .("minecraft:smooth_sandstone_slab"), 724, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			SMOOTH_QUARTZ_SLAB = Register(new .(scope .("minecraft:smooth_quartz_slab"), 725, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			GRANITE_SLAB = Register(new .(scope .("minecraft:granite_slab"), 726, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			ANDESITE_SLAB = Register(new .(scope .("minecraft:andesite_slab"), 727, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			RED_NETHER_BRICK_SLAB = Register(new .(scope .("minecraft:red_nether_brick_slab"), 728, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			POLISHED_ANDESITE_SLAB = Register(new .(scope .("minecraft:polished_andesite_slab"), 729, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			DIORITE_SLAB = Register(new .(scope .("minecraft:diorite_slab"), 730, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			BRICK_WALL = Register(new .(scope .("minecraft:brick_wall"), 731, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			PRISMARINE_WALL = Register(new .(scope .("minecraft:prismarine_wall"), 732, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			RED_SANDSTONE_WALL = Register(new .(scope .("minecraft:red_sandstone_wall"), 733, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			MOSSY_STONE_BRICK_WALL = Register(new .(scope .("minecraft:mossy_stone_brick_wall"), 734, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			GRANITE_WALL = Register(new .(scope .("minecraft:granite_wall"), 735, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			STONE_BRICK_WALL = Register(new .(scope .("minecraft:stone_brick_wall"), 736, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			MUD_BRICK_WALL = Register(new .(scope .("minecraft:mud_brick_wall"), 737, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			NETHER_BRICK_WALL = Register(new .(scope .("minecraft:nether_brick_wall"), 738, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			ANDESITE_WALL = Register(new .(scope .("minecraft:andesite_wall"), 739, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			RED_NETHER_BRICK_WALL = Register(new .(scope .("minecraft:red_nether_brick_wall"), 740, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			SANDSTONE_WALL = Register(new .(scope .("minecraft:sandstone_wall"), 741, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			END_STONE_BRICK_WALL = Register(new .(scope .("minecraft:end_stone_brick_wall"), 742, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			DIORITE_WALL = Register(new .(scope .("minecraft:diorite_wall"), 743, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			SCAFFOLDING = Register(new .(scope .("minecraft:scaffolding"), 744, scope BlockSettings().Transparent().NoCollision()), Properties.DISTANCE_2, Properties.WATERLOGGED, Properties.BOTTOM);
			LOOM = Register(new .(scope .("minecraft:loom"), 745, scope BlockSettings()), Properties.FACING_2);
			BARREL = Register(new .(scope .("minecraft:barrel"), 746, scope BlockSettings()), Properties.FACING_1, Properties.OPEN);
			SMOKER = Register(new .(scope .("minecraft:smoker"), 747, scope BlockSettings()), Properties.FACING_2, Properties.LIT);
			BLAST_FURNACE = Register(new .(scope .("minecraft:blast_furnace"), 748, scope BlockSettings()), Properties.FACING_2, Properties.LIT);
			CARTOGRAPHY_TABLE = Register(new .(scope .("minecraft:cartography_table"), 749, scope BlockSettings()));
			FLETCHING_TABLE = Register(new .(scope .("minecraft:fletching_table"), 750, scope BlockSettings()));
			GRINDSTONE = Register(new .(scope .("minecraft:grindstone"), 751, scope BlockSettings()), Properties.FACING_2, Properties.FACE);
			LECTERN = Register(new .(scope .("minecraft:lectern"), 752, scope BlockSettings()), Properties.FACING_2, Properties.POWERED, Properties.HAS_BOOK);
			SMITHING_TABLE = Register(new .(scope .("minecraft:smithing_table"), 753, scope BlockSettings()));
			STONECUTTER = Register(new .(scope .("minecraft:stonecutter"), 754, scope BlockSettings()), Properties.FACING_2);
			BELL = Register(new .(scope .("minecraft:bell"), 755, scope BlockSettings()), Properties.FACING_2, Properties.ATTACHMENT, Properties.POWERED);
			LANTERN = Register(new .(scope .("minecraft:lantern"), 756, scope BlockSettings()), Properties.HANGING, Properties.WATERLOGGED);
			SOUL_LANTERN = Register(new .(scope .("minecraft:soul_lantern"), 757, scope BlockSettings()), Properties.HANGING, Properties.WATERLOGGED);
			CAMPFIRE = Register(new .(scope .("minecraft:campfire"), 758, scope BlockSettings()), Properties.LIT, Properties.SIGNAL_FIRE, Properties.WATERLOGGED, Properties.FACING_2);
			SOUL_CAMPFIRE = Register(new .(scope .("minecraft:soul_campfire"), 759, scope BlockSettings()), Properties.LIT, Properties.SIGNAL_FIRE, Properties.WATERLOGGED, Properties.FACING_2);
			SWEET_BERRY_BUSH = Register(new .(scope .("minecraft:sweet_berry_bush"), 760, scope BlockSettings().Transparent().NoCollision()), Properties.AGE_4);
			WARPED_STEM = Register(new .(scope .("minecraft:warped_stem"), 761, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_WARPED_STEM = Register(new .(scope .("minecraft:stripped_warped_stem"), 762, scope BlockSettings()), Properties.AXIS_1);
			WARPED_HYPHAE = Register(new .(scope .("minecraft:warped_hyphae"), 763, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_WARPED_HYPHAE = Register(new .(scope .("minecraft:stripped_warped_hyphae"), 764, scope BlockSettings()), Properties.AXIS_1);
			WARPED_NYLIUM = Register(new .(scope .("minecraft:warped_nylium"), 765, scope BlockSettings()));
			WARPED_FUNGUS = Register(new .(scope .("minecraft:warped_fungus"), 766, scope BlockSettings().Transparent().NoCollision()));
			WARPED_WART_BLOCK = Register(new .(scope .("minecraft:warped_wart_block"), 767, scope BlockSettings()));
			WARPED_ROOTS = Register(new .(scope .("minecraft:warped_roots"), 768, scope BlockSettings().Transparent().NoCollision()));
			NETHER_SPROUTS = Register(new .(scope .("minecraft:nether_sprouts"), 769, scope BlockSettings().Transparent().NoCollision()));
			CRIMSON_STEM = Register(new .(scope .("minecraft:crimson_stem"), 770, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_CRIMSON_STEM = Register(new .(scope .("minecraft:stripped_crimson_stem"), 771, scope BlockSettings()), Properties.AXIS_1);
			CRIMSON_HYPHAE = Register(new .(scope .("minecraft:crimson_hyphae"), 772, scope BlockSettings()), Properties.AXIS_1);
			STRIPPED_CRIMSON_HYPHAE = Register(new .(scope .("minecraft:stripped_crimson_hyphae"), 773, scope BlockSettings()), Properties.AXIS_1);
			CRIMSON_NYLIUM = Register(new .(scope .("minecraft:crimson_nylium"), 774, scope BlockSettings()));
			CRIMSON_FUNGUS = Register(new .(scope .("minecraft:crimson_fungus"), 775, scope BlockSettings().Transparent().NoCollision()));
			SHROOMLIGHT = Register(new .(scope .("minecraft:shroomlight"), 776, scope BlockSettings()));
			WEEPING_VINES = Register(new .(scope .("minecraft:weeping_vines"), 777, scope BlockSettings().Transparent().NoCollision()), Properties.AGE_7);
			WEEPING_VINES_PLANT = Register(new .(scope .("minecraft:weeping_vines_plant"), 778, scope BlockSettings().Transparent().NoCollision()));
			TWISTING_VINES = Register(new .(scope .("minecraft:twisting_vines"), 779, scope BlockSettings().Transparent().NoCollision()), Properties.AGE_7);
			TWISTING_VINES_PLANT = Register(new .(scope .("minecraft:twisting_vines_plant"), 780, scope BlockSettings().Transparent().NoCollision()));
			CRIMSON_ROOTS = Register(new .(scope .("minecraft:crimson_roots"), 781, scope BlockSettings().Transparent().NoCollision()));
			CRIMSON_PLANKS = Register(new .(scope .("minecraft:crimson_planks"), 782, scope BlockSettings()));
			WARPED_PLANKS = Register(new .(scope .("minecraft:warped_planks"), 783, scope BlockSettings()));
			CRIMSON_SLAB = Register(new .(scope .("minecraft:crimson_slab"), 784, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			WARPED_SLAB = Register(new .(scope .("minecraft:warped_slab"), 785, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			CRIMSON_PRESSURE_PLATE = Register(new .(scope .("minecraft:crimson_pressure_plate"), 786, scope BlockSettings().NoCollision()), Properties.POWERED);
			WARPED_PRESSURE_PLATE = Register(new .(scope .("minecraft:warped_pressure_plate"), 787, scope BlockSettings().NoCollision()), Properties.POWERED);
			CRIMSON_FENCE = Register(new .(scope .("minecraft:crimson_fence"), 788, scope BlockSettings()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			WARPED_FENCE = Register(new .(scope .("minecraft:warped_fence"), 789, scope BlockSettings()), Properties.NORTH_1, Properties.EAST_1, Properties.WEST_1, Properties.SOUTH_1, Properties.WATERLOGGED);
			CRIMSON_TRAPDOOR = Register(new .(scope .("minecraft:crimson_trapdoor"), 790, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.HALF_2, Properties.POWERED, Properties.WATERLOGGED);
			WARPED_TRAPDOOR = Register(new .(scope .("minecraft:warped_trapdoor"), 791, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.HALF_2, Properties.POWERED, Properties.WATERLOGGED);
			CRIMSON_FENCE_GATE = Register(new .(scope .("minecraft:crimson_fence_gate"), 792, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.POWERED, Properties.IN_WALL);
			WARPED_FENCE_GATE = Register(new .(scope .("minecraft:warped_fence_gate"), 793, scope BlockSettings()), Properties.FACING_2, Properties.OPEN, Properties.POWERED, Properties.IN_WALL);
			CRIMSON_STAIRS = Register(new .(scope .("minecraft:crimson_stairs"), 794, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			WARPED_STAIRS = Register(new .(scope .("minecraft:warped_stairs"), 795, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			CRIMSON_BUTTON = Register(new .(scope .("minecraft:crimson_button"), 796, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.POWERED, Properties.FACE);
			WARPED_BUTTON = Register(new .(scope .("minecraft:warped_button"), 797, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.POWERED, Properties.FACE);
			CRIMSON_DOOR = Register(new .(scope .("minecraft:crimson_door"), 798, scope BlockSettings()), Properties.HALF_1, Properties.FACING_2, Properties.OPEN, Properties.HINGE, Properties.POWERED);
			WARPED_DOOR = Register(new .(scope .("minecraft:warped_door"), 799, scope BlockSettings()), Properties.HALF_1, Properties.FACING_2, Properties.OPEN, Properties.HINGE, Properties.POWERED);
			CRIMSON_SIGN = Register(new .(scope .("minecraft:crimson_sign"), 800, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.WATERLOGGED);
			WARPED_SIGN = Register(new .(scope .("minecraft:warped_sign"), 801, scope BlockSettings().NoCollision()), Properties.ROTATION, Properties.WATERLOGGED);
			CRIMSON_WALL_SIGN = Register(new .(scope .("minecraft:crimson_wall_sign"), 802, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			WARPED_WALL_SIGN = Register(new .(scope .("minecraft:warped_wall_sign"), 803, scope BlockSettings().NoCollision()), Properties.FACING_2, Properties.WATERLOGGED);
			STRUCTURE_BLOCK = Register(new .(scope .("minecraft:structure_block"), 804, scope BlockSettings()), Properties.MODE_2);
			JIGSAW = Register(new .(scope .("minecraft:jigsaw"), 805, scope BlockSettings()), Properties.ORIENTATION);
			COMPOSTER = Register(new .(scope .("minecraft:composter"), 806, scope BlockSettings()), Properties.LEVEL_3);
			TARGET = Register(new .(scope .("minecraft:target"), 807, scope BlockSettings()), Properties.POWER);
			BEE_NEST = Register(new .(scope .("minecraft:bee_nest"), 808, scope BlockSettings()), Properties.HONEY_LEVEL, Properties.FACING_2);
			BEEHIVE = Register(new .(scope .("minecraft:beehive"), 809, scope BlockSettings()), Properties.HONEY_LEVEL, Properties.FACING_2);
			HONEY_BLOCK = Register(new .(scope .("minecraft:honey_block"), 810, scope BlockSettings()));
			HONEYCOMB_BLOCK = Register(new .(scope .("minecraft:honeycomb_block"), 811, scope BlockSettings()));
			NETHERITE_BLOCK = Register(new .(scope .("minecraft:netherite_block"), 812, scope BlockSettings()));
			ANCIENT_DEBRIS = Register(new .(scope .("minecraft:ancient_debris"), 813, scope BlockSettings()));
			CRYING_OBSIDIAN = Register(new .(scope .("minecraft:crying_obsidian"), 814, scope BlockSettings()));
			RESPAWN_ANCHOR = Register(new .(scope .("minecraft:respawn_anchor"), 815, scope BlockSettings()), Properties.CHARGES);
			POTTED_CRIMSON_FUNGUS = Register(new .(scope .("minecraft:potted_crimson_fungus"), 816, scope BlockSettings().Transparent()));
			POTTED_WARPED_FUNGUS = Register(new .(scope .("minecraft:potted_warped_fungus"), 817, scope BlockSettings().Transparent()));
			POTTED_CRIMSON_ROOTS = Register(new .(scope .("minecraft:potted_crimson_roots"), 818, scope BlockSettings().Transparent()));
			POTTED_WARPED_ROOTS = Register(new .(scope .("minecraft:potted_warped_roots"), 819, scope BlockSettings().Transparent()));
			LODESTONE = Register(new .(scope .("minecraft:lodestone"), 820, scope BlockSettings()));
			BLACKSTONE = Register(new .(scope .("minecraft:blackstone"), 821, scope BlockSettings()));
			BLACKSTONE_STAIRS = Register(new .(scope .("minecraft:blackstone_stairs"), 822, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			BLACKSTONE_WALL = Register(new .(scope .("minecraft:blackstone_wall"), 823, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			BLACKSTONE_SLAB = Register(new .(scope .("minecraft:blackstone_slab"), 824, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			POLISHED_BLACKSTONE = Register(new .(scope .("minecraft:polished_blackstone"), 825, scope BlockSettings()));
			POLISHED_BLACKSTONE_BRICKS = Register(new .(scope .("minecraft:polished_blackstone_bricks"), 826, scope BlockSettings()));
			CRACKED_POLISHED_BLACKSTONE_BRICKS = Register(new .(scope .("minecraft:cracked_polished_blackstone_bricks"), 827, scope BlockSettings()));
			CHISELED_POLISHED_BLACKSTONE = Register(new .(scope .("minecraft:chiseled_polished_blackstone"), 828, scope BlockSettings()));
			POLISHED_BLACKSTONE_BRICK_SLAB = Register(new .(scope .("minecraft:polished_blackstone_brick_slab"), 829, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			POLISHED_BLACKSTONE_BRICK_STAIRS = Register(new .(scope .("minecraft:polished_blackstone_brick_stairs"), 830, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			POLISHED_BLACKSTONE_BRICK_WALL = Register(new .(scope .("minecraft:polished_blackstone_brick_wall"), 831, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			GILDED_BLACKSTONE = Register(new .(scope .("minecraft:gilded_blackstone"), 832, scope BlockSettings()));
			POLISHED_BLACKSTONE_STAIRS = Register(new .(scope .("minecraft:polished_blackstone_stairs"), 833, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			POLISHED_BLACKSTONE_SLAB = Register(new .(scope .("minecraft:polished_blackstone_slab"), 834, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			POLISHED_BLACKSTONE_PRESSURE_PLATE = Register(new .(scope .("minecraft:polished_blackstone_pressure_plate"), 835, scope BlockSettings().NoCollision()), Properties.POWERED);
			POLISHED_BLACKSTONE_BUTTON = Register(new .(scope .("minecraft:polished_blackstone_button"), 836, scope BlockSettings().Transparent().NoCollision()), Properties.FACING_2, Properties.POWERED, Properties.FACE);
			POLISHED_BLACKSTONE_WALL = Register(new .(scope .("minecraft:polished_blackstone_wall"), 837, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			CHISELED_NETHER_BRICKS = Register(new .(scope .("minecraft:chiseled_nether_bricks"), 838, scope BlockSettings()));
			CRACKED_NETHER_BRICKS = Register(new .(scope .("minecraft:cracked_nether_bricks"), 839, scope BlockSettings()));
			QUARTZ_BRICKS = Register(new .(scope .("minecraft:quartz_bricks"), 840, scope BlockSettings()));
			CANDLE = Register(new .(scope .("minecraft:candle"), 841, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			WHITE_CANDLE = Register(new .(scope .("minecraft:white_candle"), 842, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			ORANGE_CANDLE = Register(new .(scope .("minecraft:orange_candle"), 843, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			MAGENTA_CANDLE = Register(new .(scope .("minecraft:magenta_candle"), 844, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			LIGHT_BLUE_CANDLE = Register(new .(scope .("minecraft:light_blue_candle"), 845, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			YELLOW_CANDLE = Register(new .(scope .("minecraft:yellow_candle"), 846, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			LIME_CANDLE = Register(new .(scope .("minecraft:lime_candle"), 847, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			PINK_CANDLE = Register(new .(scope .("minecraft:pink_candle"), 848, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			GRAY_CANDLE = Register(new .(scope .("minecraft:gray_candle"), 849, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			LIGHT_GRAY_CANDLE = Register(new .(scope .("minecraft:light_gray_candle"), 850, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			CYAN_CANDLE = Register(new .(scope .("minecraft:cyan_candle"), 851, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			PURPLE_CANDLE = Register(new .(scope .("minecraft:purple_candle"), 852, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			BLUE_CANDLE = Register(new .(scope .("minecraft:blue_candle"), 853, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			BROWN_CANDLE = Register(new .(scope .("minecraft:brown_candle"), 854, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			GREEN_CANDLE = Register(new .(scope .("minecraft:green_candle"), 855, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			RED_CANDLE = Register(new .(scope .("minecraft:red_candle"), 856, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			BLACK_CANDLE = Register(new .(scope .("minecraft:black_candle"), 857, scope BlockSettings().Transparent()), Properties.CANDLES, Properties.LIT, Properties.WATERLOGGED);
			CANDLE_CAKE = Register(new .(scope .("minecraft:candle_cake"), 858, scope BlockSettings()), Properties.LIT);
			WHITE_CANDLE_CAKE = Register(new .(scope .("minecraft:white_candle_cake"), 859, scope BlockSettings()), Properties.LIT);
			ORANGE_CANDLE_CAKE = Register(new .(scope .("minecraft:orange_candle_cake"), 860, scope BlockSettings()), Properties.LIT);
			MAGENTA_CANDLE_CAKE = Register(new .(scope .("minecraft:magenta_candle_cake"), 861, scope BlockSettings()), Properties.LIT);
			LIGHT_BLUE_CANDLE_CAKE = Register(new .(scope .("minecraft:light_blue_candle_cake"), 862, scope BlockSettings()), Properties.LIT);
			YELLOW_CANDLE_CAKE = Register(new .(scope .("minecraft:yellow_candle_cake"), 863, scope BlockSettings()), Properties.LIT);
			LIME_CANDLE_CAKE = Register(new .(scope .("minecraft:lime_candle_cake"), 864, scope BlockSettings()), Properties.LIT);
			PINK_CANDLE_CAKE = Register(new .(scope .("minecraft:pink_candle_cake"), 865, scope BlockSettings()), Properties.LIT);
			GRAY_CANDLE_CAKE = Register(new .(scope .("minecraft:gray_candle_cake"), 866, scope BlockSettings()), Properties.LIT);
			LIGHT_GRAY_CANDLE_CAKE = Register(new .(scope .("minecraft:light_gray_candle_cake"), 867, scope BlockSettings()), Properties.LIT);
			CYAN_CANDLE_CAKE = Register(new .(scope .("minecraft:cyan_candle_cake"), 868, scope BlockSettings()), Properties.LIT);
			PURPLE_CANDLE_CAKE = Register(new .(scope .("minecraft:purple_candle_cake"), 869, scope BlockSettings()), Properties.LIT);
			BLUE_CANDLE_CAKE = Register(new .(scope .("minecraft:blue_candle_cake"), 870, scope BlockSettings()), Properties.LIT);
			BROWN_CANDLE_CAKE = Register(new .(scope .("minecraft:brown_candle_cake"), 871, scope BlockSettings()), Properties.LIT);
			GREEN_CANDLE_CAKE = Register(new .(scope .("minecraft:green_candle_cake"), 872, scope BlockSettings()), Properties.LIT);
			RED_CANDLE_CAKE = Register(new .(scope .("minecraft:red_candle_cake"), 873, scope BlockSettings()), Properties.LIT);
			BLACK_CANDLE_CAKE = Register(new .(scope .("minecraft:black_candle_cake"), 874, scope BlockSettings()), Properties.LIT);
			AMETHYST_BLOCK = Register(new .(scope .("minecraft:amethyst_block"), 875, scope BlockSettings()));
			BUDDING_AMETHYST = Register(new .(scope .("minecraft:budding_amethyst"), 876, scope BlockSettings()));
			AMETHYST_CLUSTER = Register(new .(scope .("minecraft:amethyst_cluster"), 877, scope BlockSettings()), Properties.WATERLOGGED, Properties.FACING_1);
			LARGE_AMETHYST_BUD = Register(new .(scope .("minecraft:large_amethyst_bud"), 878, scope BlockSettings()), Properties.WATERLOGGED, Properties.FACING_1);
			MEDIUM_AMETHYST_BUD = Register(new .(scope .("minecraft:medium_amethyst_bud"), 879, scope BlockSettings()), Properties.WATERLOGGED, Properties.FACING_1);
			SMALL_AMETHYST_BUD = Register(new .(scope .("minecraft:small_amethyst_bud"), 880, scope BlockSettings()), Properties.WATERLOGGED, Properties.FACING_1);
			TUFF = Register(new .(scope .("minecraft:tuff"), 881, scope BlockSettings()));
			CALCITE = Register(new .(scope .("minecraft:calcite"), 882, scope BlockSettings()));
			TINTED_GLASS = Register(new .(scope .("minecraft:tinted_glass"), 883, scope BlockSettings().Transparent()));
			POWDER_SNOW = Register(new .(scope .("minecraft:powder_snow"), 884, scope BlockSettings()));
			SCULK_SENSOR = Register(new .(scope .("minecraft:sculk_sensor"), 885, scope BlockSettings()), Properties.SCULK_SENSOR_PHASE, Properties.POWER, Properties.WATERLOGGED);
			SCULK = Register(new .(scope .("minecraft:sculk"), 886, scope BlockSettings()));
			SCULK_VEIN = Register(new .(scope .("minecraft:sculk_vein"), 887, scope BlockSettings().NoCollision()), Properties.DOWN, Properties.UP, Properties.NORTH_1, Properties.SOUTH_1, Properties.WEST_1, Properties.EAST_1, Properties.WATERLOGGED);
			SCULK_CATALYST = Register(new .(scope .("minecraft:sculk_catalyst"), 888, scope BlockSettings()), Properties.BLOOM);
			SCULK_SHRIEKER = Register(new .(scope .("minecraft:sculk_shrieker"), 889, scope BlockSettings()), Properties.SHRIEKING, Properties.WATERLOGGED, Properties.CAN_SUMMON);
			OXIDIZED_COPPER = Register(new .(scope .("minecraft:oxidized_copper"), 890, scope BlockSettings()));
			WEATHERED_COPPER = Register(new .(scope .("minecraft:weathered_copper"), 891, scope BlockSettings()));
			EXPOSED_COPPER = Register(new .(scope .("minecraft:exposed_copper"), 892, scope BlockSettings()));
			COPPER_BLOCK = Register(new .(scope .("minecraft:copper_block"), 893, scope BlockSettings()));
			COPPER_ORE = Register(new .(scope .("minecraft:copper_ore"), 894, scope BlockSettings()));
			DEEPSLATE_COPPER_ORE = Register(new .(scope .("minecraft:deepslate_copper_ore"), 895, scope BlockSettings()));
			OXIDIZED_CUT_COPPER = Register(new .(scope .("minecraft:oxidized_cut_copper"), 896, scope BlockSettings()));
			WEATHERED_CUT_COPPER = Register(new .(scope .("minecraft:weathered_cut_copper"), 897, scope BlockSettings()));
			EXPOSED_CUT_COPPER = Register(new .(scope .("minecraft:exposed_cut_copper"), 898, scope BlockSettings()));
			CUT_COPPER = Register(new .(scope .("minecraft:cut_copper"), 899, scope BlockSettings()));
			OXIDIZED_CUT_COPPER_STAIRS = Register(new .(scope .("minecraft:oxidized_cut_copper_stairs"), 900, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			WEATHERED_CUT_COPPER_STAIRS = Register(new .(scope .("minecraft:weathered_cut_copper_stairs"), 901, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			EXPOSED_CUT_COPPER_STAIRS = Register(new .(scope .("minecraft:exposed_cut_copper_stairs"), 902, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			CUT_COPPER_STAIRS = Register(new .(scope .("minecraft:cut_copper_stairs"), 903, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			OXIDIZED_CUT_COPPER_SLAB = Register(new .(scope .("minecraft:oxidized_cut_copper_slab"), 904, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			WEATHERED_CUT_COPPER_SLAB = Register(new .(scope .("minecraft:weathered_cut_copper_slab"), 905, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			EXPOSED_CUT_COPPER_SLAB = Register(new .(scope .("minecraft:exposed_cut_copper_slab"), 906, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			CUT_COPPER_SLAB = Register(new .(scope .("minecraft:cut_copper_slab"), 907, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			WAXED_COPPER_BLOCK = Register(new .(scope .("minecraft:waxed_copper_block"), 908, scope BlockSettings()));
			WAXED_WEATHERED_COPPER = Register(new .(scope .("minecraft:waxed_weathered_copper"), 909, scope BlockSettings()));
			WAXED_EXPOSED_COPPER = Register(new .(scope .("minecraft:waxed_exposed_copper"), 910, scope BlockSettings()));
			WAXED_OXIDIZED_COPPER = Register(new .(scope .("minecraft:waxed_oxidized_copper"), 911, scope BlockSettings()));
			WAXED_OXIDIZED_CUT_COPPER = Register(new .(scope .("minecraft:waxed_oxidized_cut_copper"), 912, scope BlockSettings()));
			WAXED_WEATHERED_CUT_COPPER = Register(new .(scope .("minecraft:waxed_weathered_cut_copper"), 913, scope BlockSettings()));
			WAXED_EXPOSED_CUT_COPPER = Register(new .(scope .("minecraft:waxed_exposed_cut_copper"), 914, scope BlockSettings()));
			WAXED_CUT_COPPER = Register(new .(scope .("minecraft:waxed_cut_copper"), 915, scope BlockSettings()));
			WAXED_OXIDIZED_CUT_COPPER_STAIRS = Register(new .(scope .("minecraft:waxed_oxidized_cut_copper_stairs"), 916, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			WAXED_WEATHERED_CUT_COPPER_STAIRS = Register(new .(scope .("minecraft:waxed_weathered_cut_copper_stairs"), 917, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			WAXED_EXPOSED_CUT_COPPER_STAIRS = Register(new .(scope .("minecraft:waxed_exposed_cut_copper_stairs"), 918, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			WAXED_CUT_COPPER_STAIRS = Register(new .(scope .("minecraft:waxed_cut_copper_stairs"), 919, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			WAXED_OXIDIZED_CUT_COPPER_SLAB = Register(new .(scope .("minecraft:waxed_oxidized_cut_copper_slab"), 920, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			WAXED_WEATHERED_CUT_COPPER_SLAB = Register(new .(scope .("minecraft:waxed_weathered_cut_copper_slab"), 921, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			WAXED_EXPOSED_CUT_COPPER_SLAB = Register(new .(scope .("minecraft:waxed_exposed_cut_copper_slab"), 922, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			WAXED_CUT_COPPER_SLAB = Register(new .(scope .("minecraft:waxed_cut_copper_slab"), 923, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			LIGHTNING_ROD = Register(new .(scope .("minecraft:lightning_rod"), 924, scope BlockSettings()), Properties.FACING_1, Properties.POWERED, Properties.WATERLOGGED);
			POINTED_DRIPSTONE = Register(new .(scope .("minecraft:pointed_dripstone"), 925, scope BlockSettings()), Properties.VERTICAL_DIRECTION, Properties.THICKNESS, Properties.WATERLOGGED);
			DRIPSTONE_BLOCK = Register(new .(scope .("minecraft:dripstone_block"), 926, scope BlockSettings()));
			CAVE_VINES = Register(new .(scope .("minecraft:cave_vines"), 927, scope BlockSettings().Transparent().NoCollision()), Properties.AGE_7, Properties.BERRIES);
			CAVE_VINES_PLANT = Register(new .(scope .("minecraft:cave_vines_plant"), 928, scope BlockSettings().Transparent().NoCollision()), Properties.BERRIES);
			SPORE_BLOSSOM = Register(new .(scope .("minecraft:spore_blossom"), 929, scope BlockSettings().Transparent().NoCollision()));
			AZALEA = Register(new .(scope .("minecraft:azalea"), 930, scope BlockSettings().Transparent()));
			FLOWERING_AZALEA = Register(new .(scope .("minecraft:flowering_azalea"), 931, scope BlockSettings().Transparent()));
			MOSS_CARPET = Register(new .(scope .("minecraft:moss_carpet"), 932, scope BlockSettings().Transparent()));
			MOSS_BLOCK = Register(new .(scope .("minecraft:moss_block"), 933, scope BlockSettings()));
			BIG_DRIPLEAF = Register(new .(scope .("minecraft:big_dripleaf"), 934, scope BlockSettings().Transparent()), Properties.WATERLOGGED, Properties.FACING_2, Properties.TILT);
			BIG_DRIPLEAF_STEM = Register(new .(scope .("minecraft:big_dripleaf_stem"), 935, scope BlockSettings().Transparent().NoCollision()), Properties.WATERLOGGED, Properties.FACING_2);
			SMALL_DRIPLEAF = Register(new .(scope .("minecraft:small_dripleaf"), 936, scope BlockSettings().Transparent().NoCollision()), Properties.HALF_1, Properties.WATERLOGGED, Properties.FACING_2);
			HANGING_ROOTS = Register(new .(scope .("minecraft:hanging_roots"), 937, scope BlockSettings().Transparent().NoCollision()), Properties.WATERLOGGED);
			ROOTED_DIRT = Register(new .(scope .("minecraft:rooted_dirt"), 938, scope BlockSettings()));
			MUD = Register(new .(scope .("minecraft:mud"), 939, scope BlockSettings()));
			DEEPSLATE = Register(new .(scope .("minecraft:deepslate"), 940, scope BlockSettings()), Properties.AXIS_1);
			COBBLED_DEEPSLATE = Register(new .(scope .("minecraft:cobbled_deepslate"), 941, scope BlockSettings()));
			COBBLED_DEEPSLATE_STAIRS = Register(new .(scope .("minecraft:cobbled_deepslate_stairs"), 942, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			COBBLED_DEEPSLATE_SLAB = Register(new .(scope .("minecraft:cobbled_deepslate_slab"), 943, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			COBBLED_DEEPSLATE_WALL = Register(new .(scope .("minecraft:cobbled_deepslate_wall"), 944, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			POLISHED_DEEPSLATE = Register(new .(scope .("minecraft:polished_deepslate"), 945, scope BlockSettings()));
			POLISHED_DEEPSLATE_STAIRS = Register(new .(scope .("minecraft:polished_deepslate_stairs"), 946, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			POLISHED_DEEPSLATE_SLAB = Register(new .(scope .("minecraft:polished_deepslate_slab"), 947, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			POLISHED_DEEPSLATE_WALL = Register(new .(scope .("minecraft:polished_deepslate_wall"), 948, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			DEEPSLATE_TILES = Register(new .(scope .("minecraft:deepslate_tiles"), 949, scope BlockSettings()));
			DEEPSLATE_TILE_STAIRS = Register(new .(scope .("minecraft:deepslate_tile_stairs"), 950, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			DEEPSLATE_TILE_SLAB = Register(new .(scope .("minecraft:deepslate_tile_slab"), 951, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			DEEPSLATE_TILE_WALL = Register(new .(scope .("minecraft:deepslate_tile_wall"), 952, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			DEEPSLATE_BRICKS = Register(new .(scope .("minecraft:deepslate_bricks"), 953, scope BlockSettings()));
			DEEPSLATE_BRICK_STAIRS = Register(new .(scope .("minecraft:deepslate_brick_stairs"), 954, scope BlockSettings()), Properties.FACING_2, Properties.HALF_2, Properties.SHAPE_2, Properties.WATERLOGGED);
			DEEPSLATE_BRICK_SLAB = Register(new .(scope .("minecraft:deepslate_brick_slab"), 955, scope BlockSettings()), Properties.TYPE_3, Properties.WATERLOGGED);
			DEEPSLATE_BRICK_WALL = Register(new .(scope .("minecraft:deepslate_brick_wall"), 956, scope BlockSettings()), Properties.UP, Properties.NORTH_3, Properties.EAST_3, Properties.WEST_3, Properties.SOUTH_3, Properties.WATERLOGGED);
			CHISELED_DEEPSLATE = Register(new .(scope .("minecraft:chiseled_deepslate"), 957, scope BlockSettings()));
			CRACKED_DEEPSLATE_BRICKS = Register(new .(scope .("minecraft:cracked_deepslate_bricks"), 958, scope BlockSettings()));
			CRACKED_DEEPSLATE_TILES = Register(new .(scope .("minecraft:cracked_deepslate_tiles"), 959, scope BlockSettings()));
			INFESTED_DEEPSLATE = Register(new .(scope .("minecraft:infested_deepslate"), 960, scope BlockSettings()), Properties.AXIS_1);
			SMOOTH_BASALT = Register(new .(scope .("minecraft:smooth_basalt"), 961, scope BlockSettings()));
			RAW_IRON_BLOCK = Register(new .(scope .("minecraft:raw_iron_block"), 962, scope BlockSettings()));
			RAW_COPPER_BLOCK = Register(new .(scope .("minecraft:raw_copper_block"), 963, scope BlockSettings()));
			RAW_GOLD_BLOCK = Register(new .(scope .("minecraft:raw_gold_block"), 964, scope BlockSettings()));
			POTTED_AZALEA_BUSH = Register(new .(scope .("minecraft:potted_azalea_bush"), 965, scope BlockSettings().Transparent()));
			POTTED_FLOWERING_AZALEA_BUSH = Register(new .(scope .("minecraft:potted_flowering_azalea_bush"), 966, scope BlockSettings().Transparent()));
			OCHRE_FROGLIGHT = Register(new .(scope .("minecraft:ochre_froglight"), 967, scope BlockSettings()), Properties.AXIS_1);
			VERDANT_FROGLIGHT = Register(new .(scope .("minecraft:verdant_froglight"), 968, scope BlockSettings()), Properties.AXIS_1);
			PEARLESCENT_FROGLIGHT = Register(new .(scope .("minecraft:pearlescent_froglight"), 969, scope BlockSettings()), Properties.AXIS_1);
			FROGSPAWN = Register(new .(scope .("minecraft:frogspawn"), 970, scope BlockSettings().Transparent().NoCollision()));
			REINFORCED_DEEPSLATE = Register(new .(scope .("minecraft:reinforced_deepslate"), 971, scope BlockSettings()));

			AfterRegister();
		}
	}
}
